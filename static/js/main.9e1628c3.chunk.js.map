{"version":3,"sources":["Components/NavigationBar.js","Actions/user-actions.js","Constants.js","Actions/business-actions.js","Actions/ready-actions.js","Actions/isCity-actions.js","Actions/address-actions.js","Actions/zip-actions.js","Actions/state-actions.js","Reducers/selectors.js","Components/AutoCompleteBar.js","Components/LookUpForm.js","Requests/tradezone-requests.js","Actions/dataRange-actions.js","Components/DemographicsPanel.js","Requests/city-requests.js","Requests/map-requests.js","Actions/places-actions.js","Actions/active-actions.js","Requests/cartography-requests.js","Actions/tract-actions.js","Helpers/TradeZone.js","Components/GoogleMapComponents.js","Components/UI/SliderSwitch.js","Actions/tradeZoneBoundaries-actions.js","Components/Map.js","Redux/store.js","Reducers/user-reducer.js","Reducers/address-reducer.js","Reducers/places-reducers.js","Reducers/business-reducer.js","Reducers/active-reducer.js","Reducers/zip-reducer.js","Reducers/state-reducer.js","Reducers/tract-reducer.js","Reducers/dataRange-reducer.js","Reducers/ready-reducer.js","Reducers/isCity-reducer.js","Reducers/tradeZoneBounds-reducer.js","Components/PlacesList.js","Components/App.js","Redux/serviceWorker.js","index.js"],"names":["NavigationBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav_default","className","Link","NavDropdown_default","title","Item","Divider","Form_default","inline","FormControl_default","type","placeholder","Button_default","variant","React","Component","UPDATE_USER","SHOW_ERROR","showError","payload","user","API","GOOGLE_KEY","google","window","maps","MapTypeId","ROADMAP","MapTypeControlStyle","HORIZONTAL_BAR","ControlPosition","BOTTOM_CENTER","SATELLITE","HYBRID","UPDATE_BUSINESS_TYPE","updateBusinessType","business_type","UPDATE_READY","UPDATE_IS_CITY","UPDATE_ADDRESS","UPDATE_ZIP","UPDATE_STATE","activeSelector","createSelector","active_place","addressSelector","address","businessTypeSelector","dataRangeSelector","data_range","placesSelector","places","stateSelector","tractSelector","tract","userSelector","zipSelector","zip","readySelector","ready","isCitySelector","isCity","tradeZoneBoundsSelector","tradeZone_bounds","AutoCompleteBar","handleChange","setState","handleSelect","_ref","asyncToGenerator","regenerator_default","mark","_callee","number","street","city","geoCode","addressState","wrap","_context","prev","next","geocodeByAddress","then","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","address_components","Symbol","iterator","done","c","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","types","long_name","short_name","err","return","console","log","getLatLng","latLng","catch","error","sent","formatted","coords","onUpdateAddress","stop","_x","apply","arguments","bind","assertThisInitialized","dist_default","onChange","onSelect","_ref2","getInputProps","suggestions","getSuggestionItemProps","loading","assign","style","width","map","suggestion","active","backgroundColor","cursor","description","mapStateToProps","selectors","mapActionsToProps","newAddress","onUpdateBusinessType","onUpdateZip","onUpdateState","connect","LookUpForm","onFormChange","onBusinessFormChange","onUpdateReady","onHandleSubmit","onUpdateIsCity","onTempFormChange","event","defineProperty","target","name","isReady","toString","length","Label","color","Components_AutoCompleteBar","Row","Group","as","Col","controlId","Control","onClick","getTradeZoneBounds","center","lat","lng","fetch","method","credentials","headers","Accept","Content-Type","response","json","getTradeZoneStats","bounds","formBody","body","JSON","stringify","UPDATE_DATA_RANGE","ZIP","DemographicsPanel","statsLoaded","onUpdateDataRange","getZipData","getTradeZoneData","val","prevProps","tradeZoneStats","res","data","_this2","zipStats","_this3","social_data","summary","gender","race","education","marital_status","employment","transportation","income_data","social","income","NestedCard","key_i","Card_default","Accordion_default","Card","Header","eventKey","Body","overflowX","overflowY","Table_default","striped","bordered","hover","entries","i","key","orientation","textAlign","display","margin","height","padding","defaultActiveKey","population","median_age","median","males","females","getNearby","callBack","token","get","UPDATE_PLACES","ACTIVATE_PLACE","updateActivePlace","place","getTradeZoneCartography","UPDATE_TRACT","getPoints","distance","φ1","toRadians","λ1","d","R","points","brng","φ2","Math","asin","sin","cos","λ2","atan2","toDegrees","push","num","PI","renderCircle","radius","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","renderMarker","position","icon","label","Marker","labelContent","YELLOW_MARKER","RED_MARKER","GREEN_MARKER","YELLOW_DOT","BLUE_DOT","SliderSwitch","checked","switchFunction","htmlFor","react_switch_default","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","UPDATE_TRADEZONE_BOUNDS","infoWindow","InfoWindow","SimpleMap","updateMapOptions","mapType","streetViewControl","scaleControl","fullscreenControl","styles","featureType","elementType","stylers","visibility","gestureHandling","disableDoubleClickZoom","minZoom","maxZoom","mapTypeControl","mapTypeId","mapTypeControlOptions","mapTypeIds","zoomControl","clickableIcons","onHandleAerial","prevState","aerial","zoom","mapOptions","updateMarkers","markerMap","markers","Array","from","img","marker","geometry","location","set","updateInfoWindow","slicedToArray","addListener","onUpdateActivePlace","updatePlaceDetails","setContent","ReactDOMServer","renderToStaticMarkup","getInfoContent","open","getPlaceDetails","place_id","callback","request","placeId","fields","PlacesService","getDetails","status","PlacesServiceStatus","OK","getOpen","opening_hours","is_open","updateMarker","setIcon","handleSwitch","renderCartography","clearCartography","Map","place_details","place_photos","places_cache","places_count","address_line","boundaries","cartography","display_cartography","cartographyLoaded","onUpdatePlaces","onUpdateTract","lessPlaces","loadAllPlaces","loadMorePlaces","loadDefaultPlaces","exampleRef","createRef","getopen","loadCartography","onPlacesCountChange","updateRadii","initCache","onUpdateTradeZoneBounds","loadTradeZoneCartography","setInterval","getMap","includes","trigger","setMap","toLowerCase","mCartography","tradezone","_i","_business_types","forEach","feature","remove","_this4","featureSet","addGeoJson","featureSets","setTimeout","_this5","URL","getZipCartography","morePlaces","_this6","concat","has","_this7","_this8","index","hasCallback","_this9","cached_places","values","slice","loadPlaceType","_this10","details","photo_url","marginRight","marginLeft","src","formatted_address","website","rating","user_ratings_total","_this11","photos","ref","getPhoto","photo_reference","url","_this12","float","marginBottom","UI_SliderSwitch","lib_default","bootstrapURLKeys","yesIWantToUseGoogleMapApiInternals","layerTypes","onGoogleApiLoaded","_ref4","yourBusinessMarker","content","apiIsLoaded","options","resetBoundsOnResize","defaultProps","defaultCenter","defaultzoom","newPlaces","allReducers","combineReducers","allStoreEnhancers","compose","applyMiddleware","thunk","store","createStore","getState","PlacesList","activatePlace","subscribe","activePlaceSelector","App","scrollTo","top","behavior","streetViewPanoramaOptions","pov","heading","pitch","Components_DemographicsPanel","Components_Map","Components_PlacesList","alignItems","justifyContent","react_static_google_map_umd","size","maptype","apiKey","ReactStreetview_default","Components_NavigationBar","Components_LookUpForm","Boolean","hostname","match","rootElement","document","getElementById","ReactDOM","render","es","react_router_dom","basename","process","Components_App","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.9e1628c3.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\n\n\nclass NavigationBar extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\">Project Landmark</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#link\">Link</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                    </Nav>\n                    <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default NavigationBar;\n","export const UPDATE_USER = 'users:updateUser';\nexport const SHOW_ERROR = 'users:showError';\n\n\nexport function updateUser(newUser) {\n    return {\n        type: UPDATE_USER,\n        payload: {\n            user: newUser\n        }\n    }\n}\n\nexport function showError() {\n    return {\n        type: SHOW_ERROR,\n        payload: {\n            user: 'ERROR!!'}\n    }\n}\n\n","  export const API =  'https://landmark-backend-252701.appspot.com/'\n // export const API = 'http://localhost:8080/';\n\n export const GOOGLE_KEY = 'AIzaSyDc1QhQx9sfS2E-ZdM0cDQuVtM_NlQhdSU'; \n export const google = window.google;\n export const GOOGLE_SECRET = 'lpkXmFKRjuqOM9YXgLIrGRlPWIA=';\n\n export const mapOptions =  {\n    streetViewControl: true,\n    scaleControl: true,\n    fullscreenControl: false,\n    styles: [{\n        featureType: \"poi.business\",\n        elementType: \"labels\",\n        stylers: [{\n            visibility: \"off\"\n        }]\n    }],\n    gestureHandling: \"greedy\",\n    disableDoubleClickZoom: true,\n    minZoom: 5,\n    maxZoom: 100,\n\n    mapTypeControl: true,\n    mapTypeId: google.maps.MapTypeId.ROADMAP,\n    mapTypeControlOptions: {\n        style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n        position: google.maps.ControlPosition.BOTTOM_CENTER,\n        mapTypeIds: [\n          google.maps.MapTypeId.ROADMAP,\n          google.maps.MapTypeId.SATELLITE,\n          google.maps.MapTypeId.HYBRID\n        ]\n    },\n    zoomControl: true,\n    clickableIcons: false\n};","export const UPDATE_BUSINESS_TYPE = 'business_type:updateBusinessType';\n\nexport function updateBusinessType(type) {\n    return {\n      type: UPDATE_BUSINESS_TYPE,\n      payload: {\n        business_type: type\n      }\n    }\n}\n","export const UPDATE_READY = 'state:updateReady';\n\nexport function updateReady(isReady) {\n  return {\n    type: UPDATE_READY,\n    payload: {\n      ready: isReady\n    }\n  }\n}\n","export const UPDATE_IS_CITY = 'isCity:isCity';\n\nexport function updateIsCity(isCity) {\n  return {\n    type: UPDATE_IS_CITY,\n    payload: {\n      isCity: isCity\n    }\n  }\n}\n","export const UPDATE_ADDRESS = 'address:updateAddress';\n\nexport function updateAddress(newAddress) {\n    return {\n      type: UPDATE_ADDRESS,\n      payload: {\n        address: newAddress\n      }\n    }\n}\n","export const UPDATE_ZIP = 'zip:updateZip';\n\nexport function updateZip(zip) {\n  return {\n    type: UPDATE_ZIP,\n    payload: {\n      zip: zip\n    }\n  }\n}\n","export const UPDATE_STATE = 'state:updateState';\n\nexport function updateState(state) {\n  return {\n    type: UPDATE_STATE,\n    payload: {\n      state: state\n    }\n  }\n}\n","import { createSelector } from 'reselect';\n\nexport const activeSelector = createSelector (\n    state => state.active_place,\n    active_place => active_place\n  )\n  \nexport const addressSelector = createSelector (\n    state => state.address,\n    address => address\n  );\n  \nexport const businessTypeSelector = createSelector (\n    state => state.business_type,\n    business_type => business_type\n  );\n  \nexport const dataRangeSelector = createSelector (\n    state => state.data_range,\n    data_range => data_range\n  )\n\nexport const placesSelector = createSelector (\n    state => state.places,\n    places => places\n  )\n\nexport const stateSelector = createSelector (\n    state => state.state,\n    state => state\n  )\n\nexport const tractSelector = createSelector (\n    state => state.tract,\n    tract => tract\n  )\n\nexport const userSelector = createSelector (\n      state => state.user,\n      user => user\n  )\nexport const zipSelector = createSelector (\n    state => state.zip,\n    zip => zip\n  )\nexport const readySelector = createSelector (\n  state => state.ready,\n  ready => ready\n)\n\nexport const isCitySelector = createSelector (\n  state => state.isCity,\n  isCity => isCity\n)\n\nexport const tradeZoneBoundsSelector = createSelector (\n  state => state.tradeZone_bounds,\n  tradeZone_bounds => tradeZone_bounds\n)","import React from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport { updateAddress} from '../Actions/address-actions'\nimport { updateBusinessType} from '../Actions/business-actions'\nimport { updateZip } from '../Actions/zip-actions'\nimport { updateState } from '../Actions/state-actions'\nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport * as selectors from '../Reducers/selectors'\n\nclass AutoCompleteBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '' };\n    this.handleChange = this.handleChange.bind(this)\n    this.onUpdateAddress = this.onUpdateAddress.bind(this)\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = async address => {\n    this.handleChange(address)\n    let zip, number, street, city, state;\n    let geoCode = await geocodeByAddress(address)\n      .then(results => { \n          for (let c of results[0].address_components) {\n              for (let type of c.types) {\n                if (type == 'street_number')\n                    number = c.long_name\n                if (type == 'route')\n                    street = c.short_name\n                if (type == 'locality')\n                    city = c.long_name\n                if (type == 'administrative_area_level_1')\n                    state = c.short_name\n                if (type == \"postal_code\") \n                    zip = c.long_name\n              }\n          }\n          console.log(results)\n          return getLatLng(results[0])\n        })\n      .then(latLng => latLng)\n      .catch(error => console.error('Error', error));\n      let addressState = {}\n      addressState.formatted = address\n      addressState.street = number + ' ' + street\n      addressState.city = city\n      addressState.state = state\n      addressState.zip = zip\n      addressState.coords = geoCode\n\n      this.onUpdateAddress(addressState)\n  };\n\n  onUpdateAddress(address) {\n    this.props.onUpdateAddress(address)\n}\n\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input style= {{width: '100%'}}\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n\nconst cleanUpAddress = (address) => {\n    let split = address.split(',')\n    let cleanUp = split.map((e) => e.trim())\n    return cleanUp\n}\n\nconst mapStateToProps = createSelector(\n    selectors.addressSelector,\n    selectors.businessTypeSelector,\n    selectors.zipSelector,\n    selectors.stateSelector,\n    (address, business_type, zip, state) => ({\n        address,\n        business_type,\n        zip,\n        state\n    })\n);\n\nconst mapActionsToProps = {\n     onUpdateAddress: updateAddress,\n     onUpdateBusinessType: updateBusinessType,\n     onUpdateZip: updateZip,\n     onUpdateState: updateState\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (AutoCompleteBar);","import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport '../css/App.css';\nimport { getPopulation  } from '../Requests/city-requests' \nimport { updateBusinessType} from '../Actions/business-actions'\nimport { updateReady } from '../Actions/ready-actions'\nimport { updateIsCity } from '../Actions/isCity-actions'\nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport AutoCompleteBar from './AutoCompleteBar'\nimport * as selectors from '../Reducers/selectors'\n\nclass LookUpForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.onFormChange = this.onFormChange.bind(this);\n        this.onBusinessFormChange = this.onBusinessFormChange.bind(this);\n        this.onUpdateBusinessType = this.onUpdateBusinessType.bind(this);\n        this.onUpdateReady = this.onUpdateReady.bind(this)\n        this.onHandleSubmit = this.onHandleSubmit.bind(this)\n        this.onUpdateIsCity = this.onUpdateIsCity.bind(this)\n        this.onTempFormChange = this.onTempFormChange.bind(this)\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n    }\n\n    onUpdateBusinessType(business_type) {\n        this.props.onUpdateBusinessType(business_type)\n    }\n\n    onUpdateIsCity(isCity) {\n        this.props.onUpdateIsCity(isCity)\n    }\n    onFormChange(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    onBusinessFormChange(event) {\n        this.setState({[event.target.name]: event.target.value})\n        this.onUpdateBusinessType(event.target.value)\n    }\n\n    onTempFormChange(event) {\n        this.setState({[event.target.name]: event.target.value})\n        if (event.target.value == 'yes')\n            this.onUpdateIsCity(true)\n        else\n            this.onUpdateIsCity(false)\n    }\n\n    onUpdateReady(isReady) {\n        this.props.onUpdateReady(isReady)\n    }\n\n    onHandleSubmit() {\n        if (this.props.address.toString().length > 0) {\n          //  await getPopulation(this.props.address.coords.lat, this.props.address.coords.lng).then(res => console.log('Lookup, isCity', res))\n            this.onUpdateReady(true)\n        }\n        else {\n            this.onUpdateReady(false)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"lookup-form-block\">\n                <br></br>\n                <Form.Label color=\"black\">Address</Form.Label>\n                <AutoCompleteBar></AutoCompleteBar>\n                <br></br>\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                        <Form.Label>Business Type</Form.Label>\n                        <Form.Control as=\"select\" name=\"business_type\" onChange={this.onBusinessFormChange}>\n                        <option>restaurant</option>\n                        <option>bar</option>\n                        <option>cafe</option>\n                        <option>beauty_salon</option>\n                        <option>clothing_store</option>\n                        <option>convenience_store</option>\n                        <option>locksmith</option>\n                        <option>bakery</option>\n                        <option>car_dealer</option>\n                        <option>supermarket</option>\n                    </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                        <Form.Label>Is City? (Temporary)</Form.Label>\n                        <Form.Control as=\"select\" name=\"isCity\" onChange={this.onTempFormChange}>\n                        <option>yes</option>\n                        <option>no</option>\n                   \n                    </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n            <Form>\n              \n                <Button variant=\"primary\" onClick={this.onHandleSubmit} >\n                    Submit\n                </Button>\n            </Form>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = createSelector(\n    selectors.businessTypeSelector,\n    selectors.readySelector,\n    selectors.addressSelector,\n    selectors.isCitySelector,\n    selectors.tradeZoneBoundsSelector,\n    (business_type, ready, address, isCity, tradeZone_bounds) => ({\n        business_type,\n        ready,\n        address,\n        isCity,\n        tradeZone_bounds\n    })\n);\n\nconst mapActionsToProps = {\n     onUpdateBusinessType: updateBusinessType,\n     onUpdateReady: updateReady,\n     onUpdateIsCity: updateIsCity\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (LookUpForm);\n","import { API } from '../Constants'\nimport { showError } from '../Actions/user-actions'\n\nexport function getTradeZoneBounds(isCity, center) {\n    let lat = center.lat\n    let lng = center.lng\n    console.log(API + 'bounds/tradezone/' + isCity + '/' + lat + '/' + lng)\n    return fetch (API + 'bounds/tradezone/' + isCity + '/' + lat + '/' + lng,\n    {\n        method : 'GET',\n        credentials: \"same-origin\", //include, same-origin\n        headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n    })\n    .then(response => response.json())\n    .catch(error => console.error('TZ error', error))\n}\n\nexport function getTradeZoneCartography(state, center, isCity, callback) {\n    console.log('LOADING TZ DATA')\n    let lat = center.lat\n    let lng = center.lng\n    let url = API + 'tradezone/cartography/' + state.toLowerCase() + '/'\n    + lat + '/'\n    + lng + '/'\n    + isCity\n    fetch(url,\n    {\n        method: 'GET',\n        credentials: \"same-origin\", //include, same-origin\n        headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n    })\n    .then(response => response.json())\n    .then(data => callback(data))\n    .catch(error => console.error('TZ error', error))\n}\n\nexport function getTradeZoneStats(bounds) {\n\n    var formBody = {\n        'bounds': bounds\n    };\n    \n    return fetch(API + 'demo/stats/tradezone',\n    {\n        method : 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body : JSON.stringify(formBody)\n    })\n        .then(response => response.json())\n        .catch(error => {\n            showError()\n            console.error('Trade Zone Stats Error:', error)\n        })\n}","export const UPDATE_DATA_RANGE = 'data_range:updateDataRange';\n\nexport function updateDataRange(type) {\n    return {\n      type: UPDATE_DATA_RANGE,\n      payload: {\n        data_range: type\n      }\n    }\n}\n","import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport { getAge, getIncome, getSocial, getZipStats  } from '../Requests/city-requests' \nimport { getTradeZoneStats } from '../Requests/tradezone-requests'\nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport { updateDataRange } from '../Actions/dataRange-actions'\nimport { isCitySelector, tractSelector, addressSelector, dataRangeSelector, tradeZoneBoundsSelector } from '../Reducers/selectors';\nexport const ZIP = 'zip code tabulation area'\nexport const TRADE_ZONE = 'tradeZone'\n\nclass DemographicsPanel extends React.Component {\n    constructor(props) {\n        super(props) \n\n        this.state = {\n            statsLoaded : false\n         }\n\n        this.onUpdateDataRange = this.onUpdateDataRange.bind(this)\n        this.getZipData = this.getZipData.bind(this)\n        this.getTradeZoneData = this.getTradeZoneData.bind(this)\n    }\n\n   onUpdateDataRange(event) {\n    let val = event.target.value\n    if (val === 'zip') {\n        this.props.onUpdateDataRange(ZIP)\n    }\n    else if (val == 'tradeZone') {\n        this.props.onUpdateDataRange(TRADE_ZONE)\n    }\n   }\n\n   async componentDidUpdate(prevProps) {\n       console.log('demo update', this.props.tradeZone_bounds, prevProps.tradeZone_bounds)\n       if (prevProps.tradeZone_bounds != this.props.tradeZone_bounds && !this.state.statsLoaded && this.state.tradeZoneStats == null) {\n           console.log('fetching Stats')\n           await this.getTradeZoneData()\n       }\n   }\n\n    async componentDidMount() {\n        await this.getZipData()\n    }\n\n    async getZipData() {\n       await getZipStats(this.props.lat, this.props.lng).then(data => this.setState({ zipStats : data }))\n    }\n\n    async getTradeZoneData() {\n        console.log(this.props.tradeZone_bounds)\n       await getTradeZoneStats(this.props.tradeZone_bounds).then(data => {\n        this.setState({tradeZoneStats : data, statsLoaded : true})\n        return \n       })\n    }\n    render() {\n        var social_data =  {\n            summary: {\n                gender : {},\n            },\n            \n            race : {},\n            education : {},\n            marital_status : {},\n            employment : {},\n            transportation : {}\n        }\n        var income_data = {}\n\n        if (this.props.data_range == ZIP) {\n            if (this.state.zipStats != null) {\n                social_data = this.state.zipStats.social\n                income_data = this.state.zipStats.income\n            }\n        } else if (this.props.data_range == TRADE_ZONE) {\n            if (this.state.tradeZoneStats != null) {\n                social_data = this.state.tradeZoneStats.social\n                income_data = this.state.tradeZoneStats.income\n            }\n        }\n\n        const NestedCard = ({name, data, key_i}) => {\n            return (\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey={key_i}>\n                        {name}\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey={key_i} >\n                    <Card.Body>\n                        <div style={{overflowX: \"auto\", overflowY: \"auto\", width: \"100%\"}}>\n                        <Table striped bordered hover variant=\"dark\" >\n                        <tbody>\n                            {Object.entries(data).map((data, i) => {\n                                return (\n                                    <tr key={i}>\n                                        <td>{data[0]}</td><td>{data[1]}</td>\n                                    </tr>\n                                );\n                                })}\n                        </tbody>\n                        </Table>\n                        </div>\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            )\n        }\n        return (\n           <div className={this.props.orientation}>\n            <div style={{width: '100hv'}}>\n               \n            </div>\n                <br></br>\n                <div style={{ textAlign: 'center'}}>\n                    <strong>Demographics</strong>\n                  </div>\n                  <br></br>\n                  <div style = {{display: 'flex'}}>\n                  <button className='map-control_button'  onClick={this.onUpdateDataRange} value= {'zip'} style={{margin: 'auto', width: '50%', height: '10%', padding: '0'}}>\n                    Zip\n                </button>\n                <button className='map-control_button'  onClick={this.onUpdateDataRange} value = {'tradeZone'} style={{margin: 'auto', width: '50%', height: '10%', padding: '0'}}>\n                    Trade Zone\n                </button>\n                  <br></br>\n                </div>\n               <Accordion defaultActiveKey=\"0\">\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                    General\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\" >\n                    <Card.Body>\n                        <Table striped bordered hover variant=\"dark\" >\n                        <tbody>\n                            <tr>\n                            <td>Business</td><td>{this.props.business_type}</td>\n                             </tr><tr>\n                             <td>City</td><td>{ this.props.city}</td>\n                             </tr><tr>\n                             <td>Street</td><td>{this.props.street}</td>\n                             </tr><tr>\n                            <td>Population</td><td>{social_data.summary.population}</td>\n                                </tr><tr>\n                            <td>Median Age</td><td>{social_data.summary.median_age}</td>\n                                </tr><tr>\n                            <td>Median Household Income</td><td>{income_data.median}</td>\n                            </tr><tr>\n                            <td>Males</td><td>{social_data.summary.gender.males}</td>\n                             </tr><tr>\n                            <td>Females</td><td>{social_data.summary.gender.females}</td>\n                             </tr>\n                        </tbody>\n                        </Table>\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                \n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                    Social\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>\n                        <Accordion defaultActiveKey=\"0\">\n                        <NestedCard name={\"Race\"} data={social_data.race} key_i={\"0\"}></NestedCard>\n                        <NestedCard name={\"Education\"} data={social_data.education} key_i={\"1\"}></NestedCard>\n                        <NestedCard name={\"Employment\"} data={social_data.employment} key_i={\"2\"}></NestedCard>\n                        <NestedCard name={\"Marital Status\"} data={social_data.marital_status} key_i={\"3\"}></NestedCard>\n                        <NestedCard name={\"Transportation\"} data={social_data.transportation} key_i={\"4\"}></NestedCard>\n                        </Accordion>\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <NestedCard name={\"Income\"} data={income_data} key_i={\"2\"}></NestedCard>\n                </Accordion>\n           </div>\n        );\n    }\n}\n\nconst mapStateToProps = createSelector(\n    tractSelector,\n    addressSelector,\n    dataRangeSelector,\n    tradeZoneBoundsSelector,\n    (tract, address, data_range, tradeZone_bounds) => ({\n        tract, address, data_range, tradeZone_bounds\n    })\n);\n\nconst mapActionsToProps = {\n    onUpdateDataRange: updateDataRange\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (DemographicsPanel);","import { showError } from '../Actions/user-actions'\nimport { API } from '../Constants'\n\nexport function getZipStats(lat, lng, type) {\n    return fetch(API + 'demo/stats/zip/' + lat + '/' + lng)\n        .then(res => res.json())\n        .catch(err => console.error(err))\n}\nexport function getPopulation(lat, lng) {\n    console.log(API + 'demo/population/city/' + lat + '/' + lng)\n    return fetch(API + 'demo/population/city/' + lat + '/' + lng)\n        .then(res => res.json())\n        .catch(err => console.error(err))\n}\n\nexport function getSocial(range, lat, lng, callback) {\n    fetch(API + 'demo/social/' + range + '/' + lat +'/'+ lng)\n        .then(response => response.json())\n        .then(data =>  callback(data))\n        .catch(error =>  { \n            showError()\n            console.error('Error:', error)\n        })\n}\n\nexport function getAge(range, lat, lng, callback) {\n    fetch(API + 'demo/age/' + range + '/' + lat +'/'+ lng)\n        .then(response => response.json())\n        .then(data =>  callback(data))\n        .catch(error =>  { \n            showError()\n            console.error('Error:', error)\n        })\n}\n\nexport function getIncome(range, lat, lng, callback) {\n    fetch(API + 'demo/income/' + range + '/' + lat +'/'+ lng)\n        .then(response => response.json())\n        .then(data =>  callback(data))\n        .catch(error =>  { \n            showError()\n            console.error('Error:', error)\n        })\n}\n\nexport function getTract(lat, lng, callback) {\n    fetch(API + 'demo/tract/' + lat +'/'+ lng)\n        .then(response => response.json())\n        .then(data =>  callback(data))\n        .catch(error =>  { \n            showError()\n            console.error('Error:', error)\n        })\n}\n\n","import { API } from '../Constants'\nconst GEO_CODE = 'https://maps.googleapis.com/maps/api/geocode/json?';\nexport const KEY = 'AIzaSyAApJlSsL7fsf9ElKRHLLOhEM2pZM00-ho';\n\nexport function getGeoCode(street, city, state, callback) {\n    var f_street = street.replace(/ /g, '+')\n    var f_city = city.replace(/ /g, '+')\n    var f_state = state.replace(/ /g, '+')\n    let f_address = f_street + ',' + '+'+f_city + ',' + '+'+f_state\n\n    fetch(GEO_CODE + 'address=' + f_address +'&key=' + KEY)\n        .then(response => response.json())\n        .then(data =>  callback(data));\n}\n\nexport function getNearby(address, type, callBack) {\n    const lat = address.coords.lat\n    const lng = address.coords.lng\n    var token;\n    fetch(API + 'places/nearby/' \n    + lat +'/'\n    + lng + '/' \n    + type,\n    {\n        method: 'GET',\n        credentials: \"same-origin\", //include, same-origin\n        headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n    })\n    .then(response => {\n        token = response.headers.get('Pragma')\n        return response.json()\n    })\n    .then(data => callBack(data, token))\n    .catch(error => console.error('Error:', error))\n}\n\nexport function getPages(token, callBack) {\n    if (token != null) {\n            fetch(API + 'places/pages/' + token, {\n                method: 'GET',\n                credentials: \"same-origin\", //include, same-origin\n                headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n            })\n            .then(response => {\n                token = response.headers.get('Pragma')\n                return response.json()\n            })\n            .then(data => callBack(data, token))\n            .catch(error => console.error('Error:', error))\n    }\n}\n\nexport function getPhoto(ref, width, height, callback) {\n    fetch(API + 'places/photos/' + ref + '/' + width + '/' + height,\n    {\n        method : 'GET',\n        credentials: \"same-origin\",\n        headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n    })\n    .then(response =>  response.json())\n    .then(data => callback(data))\n    .catch(error => console.error('Photo fetch error:', error))\n}\n\n","\nexport const UPDATE_PLACES = 'places:updatePlaces';\nconst KEY='28a04efd887ab5cf335f99aabcde1978452de2cf';\n\nexport function updatePlaces(newPlaces) {\n    return {\n      type: UPDATE_PLACES,\n      payload: {\n        places: newPlaces\n      }\n    }\n}\n","export const ACTIVATE_PLACE = 'active_place:activatePlace';\n\nexport function updateActivePlace(place) {\n  return {\n    type: ACTIVATE_PLACE,\n    payload: {\n      active_place: place\n    }\n  }\n}\n","import { showError } from '../Actions/user-actions'\nimport { API } from '../Constants'\n\nexport function getZipCartography(state, zip) {\n    let URL = API +'cart/zip/' + state +'/'+ zip\n    console.log(URL)\n    return fetch(URL)\n        .then(response => response.json())\n        .catch(error =>  { \n            showError()\n            console.error('Zip Cartography Error:',API +'cartography/zip/' + state +'/'+ zip,  error)\n        })\n}\n\nexport function getTradeZoneCartography(state, bounds) {\n\n    var formBody = {\n        'state': state,\n        'bounds': bounds\n    };\n    \n    return fetch(API + 'cart/tradezone/',\n    {\n        method : 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body : JSON.stringify(formBody)\n    })\n        .then(response => response.json())\n        .catch(error => {\n            showError()\n            console.error('Trade Zone Cartography Error:', error)\n        })\n}\n\nexport function getTractCartography(state, tract) {\n    return fetch(API +'cart/tract/' + state +'/'+ tract)\n        .then(response => response.json())\n        .catch(error =>  { \n            showError()\n            console.error('Tract Cartograhpy Error:', error)\n        })\n}\n\n\n","export const UPDATE_TRACT = 'tract:updateTract';\n\nexport function updateTract(tract) {\n  return {\n    type: UPDATE_TRACT,\n    payload: {\n      tract: tract\n    }\n  }\n}\n","\n// get lat/lng of 5 points in a circle around specified center where radius = distance\n// https://www.movable-type.co.uk/scripts/latlong.html\nexport function getPoints(center, distance) {\n    let φ1 = toRadians(center.lat)\n    let λ1 = toRadians(center.lng) \n    let d = distance\n    let R = 6371 // radius of earth in KM\n    let points = []\n    let divisor = 1\n    for (let i = 0; i < divisor; i++) {\n        let brng =  toRadians((i * (360/divisor)))\n        let φ2 = Math.asin(Math.sin(φ1)*Math.cos(d/R) +\n            Math.cos(φ1)*Math.sin(d/R)*Math.cos(brng));\n        let λ2 = λ1 + Math.atan2(Math.sin(brng)*Math.sin(d/R)*Math.cos(φ1),\n            Math.cos(d/R)-Math.sin(φ1)*Math.sin(φ2));\n        let coords = {}\n        coords.lat = toDegrees(φ2)\n        coords.lng = toDegrees(λ2)\n        points.push(coords)\n    }\n    return points\n}\n\nconst toRadians = (num) =>  num * (Math.PI/180)\nconst toDegrees = (num) =>  num * (180/Math.PI)","import { google } from '../Constants.js'\nimport React, { Component } from 'react';\n\nexport const renderCircle = (radius, color, map, center) => new google.maps.Circle({\n    strokeColor: color,\n    strokeOpacity: 0.5,\n    strokeWeight: 4,\n    fillColor: \"#00ff00\",\n    fillOpacity: 0.0,\n    map: map,\n    center: center,\n    radius: radius\n  });\n\nexport const renderMarker = (key, position, map, title, icon, label) =>  new google.maps.Marker({\n    key: key,\n    position: position,\n    map: map,\n    title: title,\n    icon: icon,\n    labelContent : label\n  });\n\nexport function renderInfoContent(place) {\n  var details = this.state.place_details.get(place.id)\n  var photo_url = this.state.place_photos.get(place.id)\n\n  /**\n   * <ReactStreetview \n            height = '200px'\n            width = '600px'\n            apiKey={GOOGLE_KEY}\n            streetViewPanoramaOptions={streetViewPanoramaOptions}\n          />\n   */\n  return (\n  <div id=\"content\">\n    <div id=\"siteNotice\">\n    </div>\n      <h3 style={{textAlign: 'center'}}>{place.name}</h3>\n      <br></br>\n      <img style={{display: 'block',  marginRight: 'auto', marginLeft: 'auto', width: '50%'}}src={photo_url}></img> \n      <br></br>\n      <div id=\"bodyContent\">\n        <p style={{textAlign: 'center'}}><strong>{details.formatted_address}</strong></p>\n        <p><a target=\"_blank\" href={details.website}>{details.website}</a></p>\n        <p>\n          Rating: {place.rating} / 5.0\n          <br></br>\n          Total Ratings: {place.user_ratings_total}\n          <br></br>\n          Open Now: {this.getOpen(place.opening_hours)}\n        </p>\n    </div>\n  </div>\n  )\n}\n\nexport const BLUE_MARKER = 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\nexport const YELLOW_MARKER = 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'\nexport const RED_MARKER = 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\nexport const GREEN_MARKER = 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\nexport const YELLOW_DOT = \"https://mcphersondev.com/yellow-dot.png\"\nexport const BLUE_DOT = \"https://mcphersondev.com/blue-dot.png\"","import React, { Component } from \"react\";\nimport Switch from \"react-switch\";\n\nclass SliderSwitch extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { checked: true };\n      this.handleChange = this.handleChange.bind(this);\n    }\n   \n    handleChange(checked) {\n      this.setState({ checked });\n      this.props.switchFunction(checked)\n    }\n   \n    render() {\n      return (\n        <label htmlFor=\"material-switch\">\n                <Switch\n                    checked={this.state.checked}\n                    onChange={this.handleChange}\n                    onColor=\"#86d3ff\"\n                    onHandleColor=\"#2693e6\"\n                    handleDiameter={30}\n                    uncheckedIcon={false}\n                    checkedIcon={false}\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                    height={20}\n                    width={48}\n                    className=\"react-switch\"\n                    id=\"material-switch\"\n                />\n        </label>\n      );\n    }\n  }\n\nexport default SliderSwitch ","export const UPDATE_TRADEZONE_BOUNDS = 'tradeZone_bounds:updateTradeZoneBounds';\n\nexport function updateTradeZoneBounds(tradeZone_bounds) {\n  return {\n    type: UPDATE_TRADEZONE_BOUNDS,\n    payload: {\n      tradeZone_bounds: tradeZone_bounds\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { getNearby, getPages, getPhoto } from '../Requests/map-requests' \nimport '../css/App.css';\nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport { updatePlaces } from '../Actions/places-actions'\nimport { updateActivePlace } from '../Actions/active-actions'\nimport ReactDOMServer from 'react-dom/server';\nimport { getZipCartography, getTradeZoneCartography } from '../Requests/cartography-requests'\nimport { getPopulation  } from '../Requests/city-requests' \nimport {updateTract} from '../Actions/tract-actions'\nimport Form from 'react-bootstrap/Form'\nimport { getPoints } from '../Helpers/TradeZone'\nimport { ZIP, TRADE_ZONE} from '../Components/DemographicsPanel'\nimport { GOOGLE_KEY, google } from '../Constants.js'\nimport { renderCircle, renderMarker, renderInfoContent, BLUE_MARKER, YELLOW_MARKER, GREEN_MARKER, RED_MARKER, YELLOW_DOT, BLUE_DOT } from './GoogleMapComponents'\nimport { activeSelector, addressSelector, businessTypeSelector, dataRangeSelector, placesSelector, stateSelector, tractSelector, zipSelector, isCitySelector, tradeZoneBoundsSelector } from '../Reducers/selectors'\nimport SliderSwitch from './UI/SliderSwitch'\nimport Button from 'react-bootstrap/Button';\nimport { updateTradeZoneBounds } from '../Actions/tradeZoneBoundaries-actions'\nimport { getTradeZoneBounds } from '../Requests/tradezone-requests'\nimport { tsThisType } from '@babel/types';\n\nconst infoWindow =  new google.maps.InfoWindow()\nclass SimpleMap extends Component {\n  static defaultProps = {\n    defaultCenter: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    defaultzoom: 11\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      center: this.props.center,\n      map : undefined,\n      markers : new Map(),\n      place_details : new Map(),\n      place_photos : new Map(),\n      places_cache : new Map(),\n      places_count : 20,\n      address_line : this.props.address.street + ', ' + this.props.address.city + ' ' + this.props.address.state + ', ' + this.props.address.zip,\n      boundaries : getPoints(this.props.center, 0.804),\n      cartography : {},\n      display_cartography: true,\n      business_type: this.props.business_type,\n      cartographyLoaded : false,\n      aerial : true,\n      zoom : this.props.zoom,\n      mapType : google.maps.MapTypeId.SATELLITE,\n      mapOptions : {\n        streetViewControl: true,\n        scaleControl: true,\n        fullscreenControl: false,\n        styles: [{\n            featureType: \"poi.business\",\n            elementType: \"labels\",\n            stylers: [{\n                visibility: \"off\"\n            }]\n        }],\n        gestureHandling: \"greedy\",\n        disableDoubleClickZoom: true,\n        minZoom: 5,\n        maxZoom: 100,\n    \n        mapTypeControl: true,\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        mapTypeControlOptions: {\n            style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n            position: google.maps.ControlPosition.BOTTOM_CENTER,\n            mapTypeIds: [\n              google.maps.MapTypeId.ROADMAP,\n              google.maps.MapTypeId.SATELLITE,\n              google.maps.MapTypeId.HYBRID\n            ]\n        },\n        zoomControl: true,\n        clickableIcons: false\n      }\n    }  \n  \n    this.onUpdatePlaces = this.onUpdatePlaces.bind(this);\n    this.onUpdateActivePlace = this.onUpdateActivePlace.bind(this);\n    this.onUpdateTract = this.onUpdateTract.bind(this)\n    this.lessPlaces = this.lessPlaces.bind(this);\n    this.loadAllPlaces = this.loadAllPlaces.bind(this);\n    this.loadMorePlaces = this.loadMorePlaces.bind(this);\n    this.loadDefaultPlaces = this.loadDefaultPlaces.bind(this);\n    this.exampleRef = React.createRef()\n    this.updateMarkers = this.updateMarkers.bind(this)\n    this.updateMarker = this.updateMarker.bind(this)\n    this.updateInfoWindow = this.updateInfoWindow.bind(this)\n    this.getopen  = this.getOpen.bind(this)\n    this.getPlaceDetails = this.getPlaceDetails.bind(this)\n    this.updatePlaceDetails = this.updatePlaceDetails.bind(this)\n    this.onBusinessFormChange = this.onBusinessFormChange.bind(this);\n    this.loadCartography = this.loadCartography.bind(this)\n    this.renderCartography = this.renderCartography.bind(this)\n    this.getInfoContent = this.getInfoContent.bind(this)\n    this.handleSwitch = this.handleSwitch.bind(this)\n    this.clearCartography = this.clearCartography.bind(this)\n    this.onPlacesCountChange = this.onPlacesCountChange.bind(this)\n    this.updateRadii =this.updateRadii.bind(this)\n    this.initCache = this.initCache.bind(this)\n    this.onUpdateTradeZoneBounds = this.onUpdateTradeZoneBounds.bind(this)\n    this.loadTradeZoneCartography = this.loadTradeZoneCartography.bind(this)\n    this.onHandleAerial = this.onHandleAerial.bind(this)\n    this.updateMapOptions = this.updateMapOptions.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    \n\n    // to-do create function updateInfoWindow\n    setInterval(async () => {\n      let isBound = (infoWindow.getMap() ? true : false)\n      if (!isBound && infoWindow.marker != undefined) {\n        let img = ''\n        if (infoWindow.marker.place.types.includes(this.props.business_type)) {\n          img = RED_MARKER\n        } else {\n          img = YELLOW_MARKER\n        }\n        infoWindow.marker.marker.setIcon(img)\n      }\n    }, 500);\n  }\n\n  async componentDidMount() {\n    this.initCache()\n    this.loadDefaultPlaces()\n    await this.loadTradeZoneCartography()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // active place change\n    if (this.props.active_place !== prevProps.active_place) \n      if (this.props.active_place.toString().length > 0) {\n        this.setState({center : this.props.active_place.geometry.location})\n\n        // highlight marker on map\n        if (prevProps.active_place.toString().length > 0)\n          this.updateMarker(this.state.markers.get(prevProps.active_place.id))\n        this.state.markers.get(this.props.active_place.id).marker.setIcon(GREEN_MARKER)\n        google.maps.event.trigger(this.state.markers.get(this.props.active_place.id).marker, 'click')\n      }\n\n    // update markers \n    if (this.props.places !== prevProps.places) {\n      if (this.state.map != undefined) {\n        Array.from(this.state.markers).map((marker, i) => {\n          marker[1].marker.setMap(null)\n        })\n        this.updateMarkers(this.state.map)\n      }\n    }\n    // update geojson\n    if (this.state.map !== undefined) {\n      if (this.props.data_range !== prevProps.data_range) {\n        if (this.state.display_cartography)\n          this.renderCartography()\n      }   \n    }\n  }\n\n  onUpdateTradeZoneBounds(tradeZone_bounds) {\n    this.props.onUpdateTradeZoneBounds(tradeZone_bounds)\n  }\n\n  async loadTradeZoneCartography() {\n    if (!this.state.cartographyLoaded) {\n      console.log('fetching bounds')\n      await getTradeZoneBounds(this.props.isCity, this.props.address.coords).then(res => this.onUpdateTradeZoneBounds(res))\n      console.log('Fetching cartography')\n      await getTradeZoneCartography(this.props.address.state.toLowerCase(), this.props.tradeZone_bounds).then((data) => {\n        let mCartography = Object.assign({}, this.state.cartography)\n        mCartography.tradezone = data\n        this.setState({ cartography : mCartography})\n        this.setState({ cartographyLoaded : true})\n        this.renderCartography()\n      })\n   }\n  }\n\n  initCache() {\n    let business_types = [ 'restaurant', 'establishment', 'bar', 'cafe', 'beauty_salon',\n     'clothing_store', 'convenience_store', 'locksmith', 'bakery',\n     'car_dealer', 'supermarket']\n\n     for (let type of business_types) {\n       this.state.places_cache.set(type, new Map())\n     }\n  }\n\n  clearCartography() {\n    this.state.map.data.forEach((feature) => {\n      this.state.map.data.remove(feature)\n    })\n  }\n  renderCartography() {\n    // clear data layer \n      this.clearCartography()\n      // render cartography\n      if (this.props.data_range == ZIP) {\n        if (this.state.cartography.zip !== undefined)\n          this.state.cartography.zip.forEach(featureSet => this.state.map.data.addGeoJson(featureSet))\n      } \n      else if (this.props.data_range == TRADE_ZONE) {\n        if (this.state.cartography.tradezone !== undefined) {\n          this.state.cartography.tradezone.forEach(featureSets => {\n            featureSets.forEach(featureSet => this.state.map.data.addGeoJson(featureSet))\n          })\n       } else {\n         setTimeout(() => this.renderCartography(), 100)\n       }\n    }\n  }\n\n  loadCartography() {\n     getZipCartography(this.props.address.state.toString().toLowerCase(), this.props.address.zip).then((data) => {\n      let mCartography = Object.assign({}, this.state.cartography)\n      mCartography.zip = data\n      this.setState({cartography : mCartography})\n      // init geojson rendering\n      this.renderCartography()\n    })\n  }\n    \n  async loadDefaultPlaces() {\n    let response = await getNearby(this.props.address, this.props.business_type, (data, token) => {\n      var morePlaces = this.props.places.concat(data)\n      this.setState({places: morePlaces})\n      for (let place of morePlaces) {\n        if (!this.state.places_cache.get(this.state.business_type).has(place.place_id)) {\n          this.state.places_cache.get(this.state.business_type).set(place.place_id, place)\n        } \n      }\n      this.setState({token: token}, () => {\n        this.onUpdatePlaces(data)\n      })\n      this.setState({ places_count : 20 })\n    })  \n  }\n\n  loadPlaceType(type) {\n    getNearby(this.props.address, type, (data, token) => {\n      var morePlaces = this.props.places.concat(data)\n      this.setState({places: morePlaces})\n      this.setState({token: token}, () => {\n        this.onUpdatePlaces(data)\n      })\n    })\n  }\n\n  loadAllPlaces() {\n    getNearby(this.props.address, 'establishment', (data, token) => {\n      var morePlaces = this.props.places.concat(data)\n      this.setState({places: morePlaces})\n      this.setState({ places_count : 20 })\n      this.setState({token: token}, () => {\n        this.onUpdatePlaces(data)\n      })\n    })\n  }\n\n  loadMorePlaces(index, hasCallback, callback) {\n        let cached_places = Array.from(this.state.places_cache.get(this.state.business_type).values())\n        if (cached_places.length > index) {\n          var morePlaces = this.state.places.concat(cached_places.slice(index, index + 20))\n          this.setState({places: morePlaces}, () => {\n            this.onUpdatePlaces(morePlaces)\n            if (hasCallback) { callback() }\n          })\n        } else {\n        getPages(this.state.token, (data, token) => {\n          this.setState({ token : token })\n        var morePlaces = this.props.places.concat(data)\n        for (let place of morePlaces) {\n          if (!this.state.places_cache.get(this.state.business_type).has(place.place_id)) {\n            this.state.places_cache.get(this.state.business_type).set(place.place_id, place)\n          } \n        }\n        this.setState({places: morePlaces}, () => {\n          this.onUpdatePlaces(morePlaces)\n          if (hasCallback) { callback() }\n        })\n      })\n    }\n  }\n  lessPlaces() {\n    if (this.props.places.length > 20) {\n      var places = this.props.places\n      places = places.slice(0, (places.length-20))\n      this.setState({places: places})\n      this.onUpdatePlaces(places)\n    }\n  }\n  onBusinessFormChange(event) {\n    this.setState({ places_count : 20 })\n    this.setState({[event.target.name]: event.target.value})\n    this.loadPlaceType(event.target.value)\n  }\n  // to do clean up & cache ffs\n  onPlacesCountChange(event) {\n    this.setState({places_count: event.target.value})\n      switch (event.target.value) {\n        case '20':\n            var places = this.props.places\n            places = places.slice(0, 20)\n            this.setState({places: places})\n            this.onUpdatePlaces(places)\n            break;\n\n        case '40':\n            if (this.props.places.length < 40) {\n              this.loadMorePlaces(20, false)\n            } else {\n              var places = this.props.places\n              places = places.slice(0, 40)\n              this.setState({places: places})\n              this.onUpdatePlaces(places)\n            }\n            break;\n\n        case '60':\n            if (this.props.places.length < 40) {\n              this.loadMorePlaces(20, true, ()=> {\n                this.loadMorePlaces(40, false)\n              })\n              \n            } else if (this.state.places.length == 40) {\n              this.loadMorePlaces(40, false)\n            }\n            else {\n              var places = this.props.places\n              places = places.slice(0, 60)\n              this.setState({places: places})\n              this.onUpdatePlaces(places)\n            }\n            break;\n      }\n  }\n  onUpdatePlaces(data) {\n    this.props.onUpdatePlaces(data)\n  }\n  onUpdateActivePlace(data) {\n    this.props.onUpdateActivePlace(data)\n  }\n  onUpdateTract(data) {\n    this.props.onUpdateTract(data)\n  }\n  getInfoContent(place) {\n   return renderInfoContent.apply(this, [place])\n  }\n\n  updateRadii() {\n      if (this.props.isCity) {\n        let circle1Distance = 804 // 0.25 mi\n        let circle2Distance = 1608 // 0.5 mi\n         const circle1 = renderCircle(circle1Distance, \"#ffff00\", this.state.map, this.state.center) \n         const circle2 = renderCircle(circle2Distance, \"#0000ff\", this.state.map, this.state.center) \n          // to-do cleanup, add label\n        let points = getPoints(this.state.center, 0.804 )\n        renderMarker('circle1', points[0], this.state.map, '0.25 mi', YELLOW_DOT)\n        points = getPoints(this.state.center, 1.604)\n        renderMarker('circle1', points[0], this.state.map, '0.5 mi', BLUE_DOT)\n\n      } else if (!this.props.isCity) {\n        let circle1Distance = 4828 // 3 mi\n        let circle2Distance = 8046 // 5 mi\n        const circle1 = renderCircle(circle1Distance, \"#ffff00\", this.state.map, this.state.center) \n        const circle2 = renderCircle(circle2Distance, \"#0000ff\", this.state.map, this.state.center) \n        // to-do cleanup, add label\n          let points = getPoints(this.state.center, 4.828)\n          renderMarker('circle1', points[0], this.state.map, '3 mi', YELLOW_DOT)\n          points = getPoints(this.state.center, 8.046)\n          renderMarker('circle1', points[0], this.state.map, '5 mi', BLUE_DOT)\n      }\n  }\n\n  updateMapOptions = () => {\n    console.log('map options', this.state.mapType)\n    return {\n      streetViewControl: true,\n      scaleControl: true,\n      fullscreenControl: false,\n      styles: [{\n          featureType: \"poi.business\",\n          elementType: \"labels\",\n          stylers: [{\n              visibility: \"off\"\n          }]\n      }],\n      gestureHandling: \"greedy\",\n      disableDoubleClickZoom: true,\n      minZoom: 5,\n      maxZoom: 100,\n  \n      mapTypeControl: true,\n      mapTypeId: this.state.mapType,\n      mapTypeControlOptions: {\n          style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n          position: google.maps.ControlPosition.BOTTOM_CENTER,\n          mapTypeIds: [\n            google.maps.MapTypeId.ROADMAP,\n            google.maps.MapTypeId.SATELLITE,\n            google.maps.MapTypeId.HYBRID\n          ]\n      },\n      zoomControl: true,\n      clickableIcons: false\n    }\n  }\n\n  onHandleAerial = () => {\n    this.setState(prevState => ({ aerial : !prevState.aerial }))\n    console.log('aerial?', this.state.aerial, 'map:', this.props.center, this.state.center)\n  \n    if (this.state.aerial) {\n      console.log('options', this.state.mapType)\n      this.setState({ zoom : 19, center : this.props.center })\n      this.setState({ mapOptions : this.updateMapOptions})\n    //  this.handleSwitch()\n    } else {\n      this.setState({ zoom : this.props.zoom, mapType : google.maps.MapTypeId.ROADMAP })\n      this.setState({ mapOptions : this.updateMapOptions})\n    //  this.handleSwitch()\n    }\n  }\n  \n  updateMapCenter(coords)  {\n    this.setState({\n        center: coords\n    });\n} \n\n   // markers\n  updateMarkers = (map) =>  {\n    let markerMap = this.state.markers\n    let count = 0;\n    Array.from(this.props.places).map((place, i) => {\n    var id= place.id\n    var img = ''\n    if (this.props.business_type == this.state.business_type) {\n      img = RED_MARKER\n    } else {\n      img = YELLOW_MARKER\n    }\n    count += 1\n    let marker = renderMarker(i, place.geometry.location, map, place.name, img)\n    markerMap.set(id, {marker: marker, place: place})\n  })\n  this.setState({ markers : markerMap})\n  this.updateInfoWindow(map)\n}\n// Array.from(p, ([key, value]) => value * value)\nupdateInfoWindow = (map) => Array.from(this.state.markers, ([key, value]) =>  {\n\n  // to close window on exit\n  value.marker.addListener('click',  () => {\n       this.onUpdateActivePlace(value.place)\n        this.updatePlaceDetails( () => {\n          infoWindow.setContent(ReactDOMServer.renderToStaticMarkup(this.getInfoContent(value.place)))\n          infoWindow.marker = value\n          infoWindow.open(map, value.marker) \n        });\n       })\n})\n\nupdatePlaceDetails(callback) {\n\n  // get details\n  if (!this.state.place_details.has(this.props.active_place.id)) {\n    this.getPlaceDetails(this.state.map, this.props.active_place.place_id, (details) => {\n      this.state.place_details.set(this.props.active_place.id, details)\n\n         // get photo\n    if (!this.state.place_photos.has(this.props.active_place.id)) {\n      if (this.props.active_place.photos !== undefined) {\n       getPhoto(this.props.active_place.photos[0].photo_reference, 400, 400, (data) => {\n        this.state.place_photos.set(this.props.active_place.id, data.url)\n        callback()\n      })\n      } else {\n        callback()\n      }\n    }\n    })\n  } else {\n    callback()\n  }\n}\n\ngetPlaceDetails = (map, place_id, callback) => {\n  var service = new google.maps.places.PlacesService(map);\n  var request = {\n    placeId: place_id,\n  //  fields: ['name', 'formatted_address', 'place_id', 'geometry']\n    fields: ['formatted_address', 'opening_hours', 'website']\n  };\n  \n     // get details\n    service.getDetails(request, (place, status) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        callback(place)\n      } else {\n        console.log('error', status)\n      }\n    });\n  }\n\ngetOpen = (opening_hours) => {\n  if (opening_hours === undefined)\n    return 'Unknown'\n  else {\n    let answer = (opening_hours.is_open) ? \"Yes\" : \"No\"\n    return answer\n  }\n}\nupdateMarker = (marker) => {\n  var img = ''\n  if (marker.place.id === this.props.active_place.id) {\n    img = GREEN_MARKER\n  } else if (this.props.business_type == this.state.business_type){\n    img = RED_MARKER\n  } else {\n    img = YELLOW_MARKER\n  }\n  marker.marker.setIcon(img)\n}\n\nhandleSwitch = (checked) => {\n  if (checked) {\n  //  this.setState({ display_cartography : true })\n    this.renderCartography()\n  } else {\n //   this.setState({ display_cartography : false })\n    this.clearCartography()\n  }\n}\n\nhandleChange = (event) => {\n  console.log('MAP CHANGE', event)\n  this.setState({ center : event.center})\n  console.log(this.state.center)\n}\n\n  render() {\n    const apiIsLoaded = (map, maps, center) => {\n      this.state.map = map\n      let yourBusinessMarker = renderMarker(undefined, center, map, 'Your Business', BLUE_MARKER)\n      var content ='<h3>Your ' + this.props.business_type.toString() +'</h3>'\n         yourBusinessMarker.addListener('click', () => {\n          infoWindow.setContent(content)\n          infoWindow.open(map, yourBusinessMarker)\n          infoWindow.marker = yourBusinessMarker\n      })\n      this.updateRadii()\n      this.loadCartography()\n    };\n\n  const MapButtons = () => \n  <div className='map-control_bar'>\n    <div style = {{ marginLeft: '5%', float: 'right'}}>\n      <Button variant=\"dark\" onClick={this.onHandleAerial}> \n        Aerial\n      </Button>\n        </div>\n         <div style = {{ marginLeft: '5%'}}>\n          <p style={{textAlign: 'center', marginBottom: '-3%'}}> Zone</p>\n         <SliderSwitch switchFunction={this.handleSwitch}></SliderSwitch>\n         </div>\n         <div style = {{ marginLeft: '5%'}}>\n          <p style={{textAlign: 'center', marginBottom: '0%'}}> Business Type</p>\n         <Form.Control value={this.state.business_type} as=\"select\" name=\"business_type\" onChange={this.onBusinessFormChange} style={{width: '200px', textAlign: 'center', display: 'inline', marginLeft: '75px', marginRight: '75px'}}>\n                        <option>restaurant</option>\n                        <option>establishment</option>\n                        <option>bar</option>\n                        <option>cafe</option>\n                        <option>beauty_salon</option>\n                        <option>clothing_store</option>\n                        <option>convenience_store</option>\n                        <option>locksmith</option>\n                        <option>bakery</option>\n                        <option>car_dealer</option>\n                        <option>supermarket</option>\n          </Form.Control>\n          </div>\n         \n          <div style = {{ marginLeft: '5%'}}>\n          <p style={{textAlign: 'center', marginBottom: '0%'}}> Results</p>\n          <Form.Control value={this.state.places_count} as=\"select\" name=\"places_count\" onChange={this.onPlacesCountChange} style={{width: '100px', textAlign: 'center', display: 'inline', float: 'right'}}>\n                        <option>20</option>\n                        <option>40</option>\n                        <option>60</option>\n          </Form.Control>\n          </div>\n         </div>\n \n    return (\n      // Important! Always set the container height explicitly\n      // to-do export styling to .css \n      <div className='map_container'>\n         <MapButtons></MapButtons>\n        \n      <div style={{height: this.props.height}}>\n      <GoogleMapReact\n         bootstrapURLKeys={{ key: GOOGLE_KEY}}\n         center={this.state.center}\n         zoom={this.state.zoom}\n         \n         yesIWantToUseGoogleMapApiInternals={true}\n         layerTypes={['TrafficLayer', 'TransitLayer']}\n         id={'map'}\n         onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps, this.state.center)}\n         options= {this.state.mapOptions}\n         resetBoundsOnResize = {true}\n         onChange={this.handleChange}\n       >\n       </GoogleMapReact>\n      </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = createSelector(\n  placesSelector, \n  activeSelector,\n  addressSelector,\n  businessTypeSelector,\n  zipSelector,\n  stateSelector,\n  tractSelector,\n  dataRangeSelector,\n  isCitySelector,\n  tradeZoneBoundsSelector,\n  (places, active_place, address, business_type, zip, state, tract, data_range, isCity, tradeZone_bounds) => ({\n    places, \n    active_place,\n    address,\n    business_type,\n    zip,\n    state, \n    tract,\n    data_range,\n    isCity,\n    tradeZone_bounds\n  })\n);\n \nconst mapActionsToProps = {\n  onUpdatePlaces: updatePlaces,\n  onUpdateActivePlace: updateActivePlace,\n  onUpdateTract: updateTract,\n  onUpdateTradeZoneBounds: updateTradeZoneBounds\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (SimpleMap);","\nimport { applyMiddleware, compose, createStore, combineReducers} from 'redux';\nimport userReducer from '../Reducers/user-reducer'\nimport addressReducer from '../Reducers/address-reducer'\nimport placesReducer from '../Reducers/places-reducers'\nimport activeReducer from '../Reducers/active-reducer'\nimport thunk from 'redux-thunk';\nimport businessReducer from '../Reducers/business-reducer';\nimport zipReducer from '../Reducers/zip-reducer';\nimport stateReducer from '../Reducers/state-reducer'\nimport tractReducer from '../Reducers/tract-reducer'\nimport dataRangeReducer from '../Reducers/dataRange-reducer'\nimport readyReducer from '../Reducers/ready-reducer'\nimport isCityReducer from '../Reducers/isCity-reducer'\nimport tradeZoneBoundsReducer from '../Reducers/tradeZoneBounds-reducer'\nimport { ZIP} from  '../Components/DemographicsPanel'\n\nconst allReducers = combineReducers({\n    user: userReducer,\n    address: addressReducer,\n    places: placesReducer,\n    business_type: businessReducer,\n    active_place: activeReducer,\n    zip: zipReducer,\n    state: stateReducer,\n    tract: tractReducer,\n    data_range: dataRangeReducer,\n    ready: readyReducer,\n    isCity : isCityReducer,\n    tradeZone_bounds : tradeZoneBoundsReducer\n});\n\nconst allStoreEnhancers = compose(\n    applyMiddleware(thunk),\n //   window.devToolsExtension && window.devToolsExtension()\n);\n\nconst store = createStore(\n    allReducers, \n    {\n    user: 'Rob',\n    address: undefined,\n    places: [],\n    business_type: 'restaurant',\n    active_place: undefined,\n    state: undefined,\n    zip: undefined,\n    tract: undefined,\n    data_range: ZIP,\n    ready: false,\n    isCity: true,\n    tradeZone_bounds: undefined\n    },\n   \n    allStoreEnhancers\n    );\n\nconsole.log(\"store init state: \", store.getState())\n\nexport default store;","import { UPDATE_USER, SHOW_ERROR } from '../Actions/user-actions';\n\nexport default function userReducer(state = '', {type, payload}) {\n    switch (type) {\n        case UPDATE_USER:\n                console.log(\"payload\", payload)\n            return payload.user;\n        case SHOW_ERROR:\n            return payload.user;\n        default:\n            return state;\n    }\n}","import { UPDATE_ADDRESS } from '../Actions/address-actions';\n\nexport default function addressReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_ADDRESS:\n            return payload.address;\n        default:\n            return state;\n    }\n}","import { UPDATE_PLACES } from '../Actions/places-actions';\n\nexport default function placesReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_PLACES:\n            return payload.places;\n        default:\n            return state;\n    }\n}","import { UPDATE_BUSINESS_TYPE } from '../Actions/business-actions';\n\nexport default function businessReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_BUSINESS_TYPE:\n            return payload.business_type;\n        default:\n            return state;\n    }\n}\n","import { ACTIVATE_PLACE } from '../Actions/active-actions';\n\nexport default function activeReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case ACTIVATE_PLACE:\n            return payload.active_place;\n        default:\n            return state;\n    }\n}\n\n","import { UPDATE_ZIP } from '../Actions/zip-actions';\n\nexport default function zipReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_ZIP:\n            return payload.zip;\n        default:\n            return state;\n    }\n}","import { UPDATE_STATE } from '../Actions/state-actions';\n\nexport default function stateReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_STATE:\n            return payload.state;\n        default:\n            return state;\n    }\n}","import { UPDATE_TRACT } from '../Actions/tract-actions';\n\nexport default function tractReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_TRACT:\n            return payload.tract;\n        default:\n            return state;\n    }\n}","import { UPDATE_DATA_RANGE } from '../Actions/dataRange-actions';\n\nexport default function dataRangeReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_DATA_RANGE:\n            return payload.data_range;\n        default:\n            return state;\n    }\n}\n","import { UPDATE_READY } from '../Actions/ready-actions';\n\nexport default function readyReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_READY:\n            return payload.ready;\n        default:\n            return state;\n    }\n}\n\n","import { UPDATE_IS_CITY } from '../Actions/isCity-actions';\n\nexport default function isCityReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_IS_CITY:\n            return payload.isCity;\n        default:\n            return state;\n    }\n}\n\n","import { UPDATE_TRADEZONE_BOUNDS } from '../Actions/tradeZoneBoundaries-actions';\n\nexport default function tradeZoneBoundsReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_TRADEZONE_BOUNDS:\n            return payload.tradeZone_bounds;\n        default:\n            return state;\n    }\n}","import { connect } from 'react-redux'\nimport React from 'react'; \nimport Table from 'react-bootstrap/Table'\nimport store from '../Redux/store'\nimport { createSelector } from 'reselect';\nimport { updateActivePlace } from '../Actions/active-actions';\n\nclass PlacesList extends React.Component {\n\n  constructor(props) {\n    super(props)\n    \n    this.state = store.getState()\n    this.onUpdateActivePlace = this.onUpdateActivePlace.bind(this)\n    this.activatePlace = this.activatePlace.bind(this)\n\n    // listen to store\n    store.subscribe(() => {\n      this.setState(store.getState())\n    });\n  }\n\n  onUpdateActivePlace(data) {\n    this.props.onUpdateActivePlace(data)\n  }\n\n  activatePlace(event) {\n    console.log('click')\n    this.onUpdateActivePlace(event.target.value)\n  }\n  render() {\n    let places\n    if (this.props.places !== undefined) {\n       places = this.props.places.map((place, i) => {\n        return (\n          <tr\n            key={i}\n            onClick={() =>  this.onUpdateActivePlace(place)}\n          >\n            <td>{i+1}</td>\n            <td>{place.name}</td>\n            <td>{<img src={place.icon}style={{width: '32px', height: '32px'}} ></img>}</td>\n          </tr>\n        );\n      })\n    } else {\n       places = <div></div>\n    }\n\n    return (\n      <div className='places-list'>\n      <br></br>\n      <p style={{textAlign: 'center'}} ><strong>Nearby Businesses</strong></p>\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {places}\n          </tbody>\n        </Table>\n        </div>);\n    }\n}\n\nconst activePlaceSelector = createSelector (\n  state => state.active_place,\n  active_place => active_place\n)\n\nconst placesSelector = createSelector (\n  state => state.places,\n  places => places\n)\n\nconst mapStateToProps = createSelector(\n  activePlaceSelector, placesSelector,\n  (active_place, places) => ({\n    active_place,\n    places\n  })\n);\n \nconst mapActionsToProps = {\n  onUpdateActivePlace: updateActivePlace\n};\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(PlacesList);","import React from 'react'\nimport '../css/App.css'\nimport NavigationBar from './NavigationBar'\nimport LookUpForm from './LookUpForm'\nimport DemographicsPanel from './DemographicsPanel'\nimport { connect } from 'react-redux'\nimport SimpleMap from './Map'\nimport PlacesList from './PlacesList'\nimport * as selectors from '../Reducers/selectors'\nimport ReactStreetview from 'react-streetview';\nimport { StaticGoogleMap, Marker} from 'react-static-google-map';\nimport { createSelector } from 'reselect';\nimport { GOOGLE_KEY } from '../Constants'\n\nclass App extends React.Component { \n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    console.log(\"store\", this.props)\n\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n\n    if (this.props.ready) {\n\n      const streetViewPanoramaOptions = {\n        position: this.props.address.coords,\n        pov: {heading: 0, pitch: 0},\n        zoom: 1\n      };\n\n      var map = \n      <div>\n      <div className=\"results-container\">\n        <DemographicsPanel \n          business_type={this.props.business_type} \n          street = {this.props.address.street}\n          city = {this.props.address.city}\n          state = {this.props.address.state}\n          zip = {this.props.address.zip}\n          lat = {this.props.address.coords.lat}\n          lng = {this.props.address.coords.lng}\n          orientation = {\"demographics-list-vertical \"}>\n        </DemographicsPanel>\n       \n       <SimpleMap height={'75vh'} address={this.props.address} center={this.props.address.coords} zoom={15} business_type={this.props.business_type}/>\n       \n       <PlacesList></PlacesList>\n      </div>\n      <div style={{display: 'flex',  alignItems: 'center', justifyContent: 'center'}}>\n        <StaticGoogleMap size=\"600x200\"  \n          maptype='satellite' \n          zoom = '18'\n           apiKey={GOOGLE_KEY}>\n            <Marker.Group label=\"You\" color=\"brown\">\n              <Marker location={this.props.address.coords}/>\n            </Marker.Group>\n          </StaticGoogleMap>\n          <ReactStreetview \n            height = '200px'\n            width = '600px'\n            apiKey={GOOGLE_KEY}\n            streetViewPanoramaOptions={streetViewPanoramaOptions}\n          />\n        </div>\n    </div>\n\n      var mapTest = \n      <div>\n      <div className=\"results-container\">\n        <DemographicsPanel \n          business_type={this.props.business_type} \n          street = {this.props.address.street}\n          city = {this.props.address.city}\n          state = {this.props.address.state}\n          zip = {this.props.address.zip}\n          lat = {this.props.address.coords.lat}\n          lng = {this.props.address.coords.lng}\n          orientation = {\"demographics-list-vertical \"}>\n        </DemographicsPanel>\n        <div style={{  width: \"80%\", backgroundColor : 'black', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          <div style={{ margin: 'auto'}}>\n        <StaticGoogleMap size=\"2200x800\"  \n          maptype='satellite' \n          zoom = '18'\n           apiKey={GOOGLE_KEY}>\n            <Marker.Group label=\"You\" color=\"brown\">\n              <Marker location={this.props.address.coords}/>\n            </Marker.Group>\n          </StaticGoogleMap>\n          </div>\n          </div>\n       <PlacesList></PlacesList>\n      </div>\n      <div style={{display: 'flex',  alignItems: 'center', justifyContent: 'center'}}>\n        \n          <div style={{ width: '20%', height: '10%'}}>\n       <SimpleMap height={'25vh'} address={this.props.address} center={this.props.address.coords} zoom={15} business_type={this.props.business_type}/>\n       </div>\n          \n        </div>\n    </div>\n      var panel = \n       <div>\n        <br></br>\n          <DemographicsPanel \n            business_type={this.props.business_type} \n            street = {this.props.address.street}\n            city = {this.props.address.city}\n            state = {this.props.address.state}\n            zip = {this.props.address.zip}\n            lat = {this.props.address.coords.lat}\n            lng = {this.props.address.coords.lng}\n            orientation = {\"demographics-list-horizontal\"}>\n          </DemographicsPanel>\n        </div>\n    }\n    return (\n      <div>\n        <NavigationBar/>\n        {map}\n        <div className=\"App\">\n        <header className=\"App-header\">\n          <LookUpForm/>\n        </header>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createSelector(\n  selectors.userSelector,\n  selectors.addressSelector,\n  selectors.businessTypeSelector,\n  selectors.readySelector,\n  (user, address, business_type, ready) => ({\n      user,\n      address,\n      business_type,\n      ready\n  })\n);\n\n\n\nexport default connect(mapStateToProps) (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './Redux/serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './Redux/store'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>< App /></Router>\n    </Provider>,\n     rootElement\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}