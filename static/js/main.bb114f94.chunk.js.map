{"version":3,"sources":["Signing/urlSigner.js","Components/NavigationBar.js","Requests/map-requests.js","Actions/business-actions.js","Actions/ready-actions.js","Actions/address-actions.js","Actions/zip-actions.js","Actions/state-actions.js","Reducers/selectors.js","Components/AutoCompleteBar.js","Components/LookUpForm.js","Actions/user-actions.js","Requests/city-requests.js","Actions/dataRange-actions.js","Components/DemographicsPanel.js","Actions/places-actions.js","Actions/active-actions.js","Actions/tract-actions.js","Helpers/TradeZone.js","Components/GoogleMapComponents.js","Components/UI/SliderSwitch.js","Components/Map.js","Requests/cartography-requests.js","Redux/store.js","Reducers/user-reducer.js","Reducers/address-reducer.js","Reducers/places-reducers.js","Reducers/business-reducer.js","Reducers/active-reducer.js","Reducers/zip-reducer.js","Reducers/state-reducer.js","Reducers/tract-reducer.js","Reducers/dataRange-reducer.js","Reducers/ready-reducer.js","Components/PlacesList.js","Components/App.js","Redux/serviceWorker.js","index.js","Constants.js"],"names":["Buffer","__webpack_require__","d","__webpack_exports__","sign","_Constants__WEBPACK_IMPORTED_MODULE_0__","crypto","require","url","path","code","safeEncodedString","key","data","uri","parse","safeSecret","GOOGLE_SECRET","replace","from","hashedSignature","createHmac","update","digest","format","NavigationBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav_default","className","Link","NavDropdown_default","title","Item","Divider","Form_default","inline","FormControl_default","type","placeholder","Button_default","variant","React","Component","GEO_CODE","KEY","getNearby","address","callBack","token","lat","coords","lng","fetch","API","method","credentials","headers","Accept","Content-Type","then","response","get","json","catch","error","console","getPages","UPDATE_BUSINESS_TYPE","updateBusinessType","payload","business_type","UPDATE_READY","UPDATE_ADDRESS","UPDATE_ZIP","UPDATE_STATE","activeSelector","createSelector","active_place","addressSelector","businessTypeSelector","dataRangeSelector","data_range","placesSelector","places","stateSelector","tractSelector","tract","userSelector","user","zipSelector","zip","readySelector","ready","AutoCompleteBar","handleChange","setState","handleSelect","_ref","asyncToGenerator","regenerator_default","mark","_callee","number","street","city","geoCode","addressState","wrap","_context","prev","next","geocodeByAddress","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","address_components","Symbol","iterator","done","c","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","types","long_name","short_name","err","return","log","getLatLng","latLng","sent","formatted","onUpdateAddress","stop","_x","apply","arguments","bind","assertThisInitialized","dist_default","onChange","onSelect","_ref2","getInputProps","suggestions","getSuggestionItemProps","loading","assign","style","width","map","suggestion","active","backgroundColor","cursor","description","mapStateToProps","selectors","mapActionsToProps","newAddress","onUpdateBusinessType","onUpdateZip","onUpdateState","connect","LookUpForm","onUpdateUser","onFormChange","onBusinessFormChange","submitAddress","getCoords","dispatchAddress","onUpdateReady","onHandleSubmit","event","target","defineProperty","name","isReady","toString","length","callback","f_street","f_city","f_state","getGeoCode","res","geometry","location","Label","color","Components_AutoCompleteBar","Row","Group","as","Col","controlId","Control","onClick","UPDATE_USER","SHOW_ERROR","showError","getAllStats","UPDATE_DATA_RANGE","ZIP","DemographicsPanel","onUpdateDataRange","getData","val","_this2","zipStats","tradeZoneStats","social_data","summary","gender","race","education","marital_status","employment","transportation","income_data","social","income","NestedCard","key_i","Card_default","Accordion_default","Card","Header","eventKey","Body","overflowX","overflowY","Table_default","striped","bordered","hover","entries","i","orientation","textAlign","display","margin","height","padding","defaultActiveKey","population","median_age","median","males","females","UPDATE_PLACES","ACTIVATE_PLACE","updateActivePlace","place","UPDATE_TRACT","getPoints","center","distance","φ1","toRadians","λ1","R","points","brng","φ2","Math","asin","sin","cos","λ2","atan2","toDegrees","push","num","PI","renderCircle","radius","google","maps","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","renderMarker","position","icon","label","Marker","labelContent","YELLOW_MARKER","RED_MARKER","GREEN_MARKER","SliderSwitch","checked","switchFunction","htmlFor","react_switch_default","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","infoWindow","InfoWindow","SimpleMap","updateMarkers","Array","img","includes","marker","markers","set","updateInfoWindow","slicedToArray","addListener","onUpdateActivePlace","updatePlaceDetails","setContent","ReactDOMServer","renderToStaticMarkup","getInfoContent","open","getPlaceDetails","place_id","request","placeId","fields","PlacesService","getDetails","status","PlacesServiceStatus","OK","getOpen","opening_hours","is_open","updateMarker","setIcon","handleSwitch","renderCartography","clearCartography","Map","place_details","place_photos","address_line","boundaries","cartography","display_cartography","onUpdatePlaces","onUpdateTract","loadMorePlaces","lessPlaces","loadAllPlaces","loadDefaultPlaces","exampleRef","createRef","getopen","loadCartography","checkIsCity","onPlacesCountChange","updateRadii","setInterval","getMap","isCity","prevProps","prevState","trigger","setMap","Number","B01003_001E","forEach","feature","remove","_this3","featureSet","addGeoJson","tradezone","featureSets","setTimeout","_this4","URL","getZipCartography","toLowerCase","mCartography","_this5","morePlaces","concat","_this6","_this7","_this8","slice","loadPlaceType","_this9","places_count","details","photo_url","marginRight","marginLeft","src","formatted_address","website","rating","user_ratings_total","_this10","has","photos","ref","getPhoto","photo_reference","_this11","_React$createElement","_React$createElement2","marginBottom","UI_SliderSwitch","float","lib_default","options","mapOptions","bootstrapURLKeys","GOOGLE_KEY","defaultCenter","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","layerTypes","onGoogleApiLoaded","_ref3","yourBusinessMarker","content","apiIsLoaded","defaultProps","defaultzoom","newPlaces","allReducers","combineReducers","allStoreEnhancers","compose","applyMiddleware","thunk","store","createStore","getState","PlacesList","activatePlace","subscribe","activePlaceSelector","App","window","scrollTo","top","behavior","Components_DemographicsPanel","Components_Map","Components_PlacesList","alignItems","justifyContent","react_static_google_map_umd","size","maptype","apiKey","Components_NavigationBar","Components_LookUpForm","Boolean","hostname","match","rootElement","document","getElementById","process","ReactDOM","render","es","react_router_dom","basename","Components_App","navigator","serviceWorker","registration","unregister","streetViewControl","scaleControl","fullscreenControl","styles","featureType","elementType","stylers","visibility","gestureHandling","disableDoubleClickZoom","minZoom","maxZoom","mapTypeControl","mapTypeId","MapTypeId","ROADMAP","mapTypeControlOptions","MapTypeControlStyle","HORIZONTAL_BAR","ControlPosition","BOTTOM_CENTER","mapTypeIds","SATELLITE","HYBRID","zoomControl","clickableIcons"],"mappings":"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","file":"static/js/main.bb114f94.chunk.js","sourcesContent":["'use strict'\nimport { GOOGLE_SECRET } from '../Constants'\nconst crypto = require('crypto');\nconst url = require('url');\n\n/**\n * Convert from 'web safe' base64 to true base64.\n *\n * @param  {string} safeEncodedString The code you want to translate\n *                                    from a web safe form.\n * @return {string}\n */\nfunction removeWebSafe(safeEncodedString) {\n  return safeEncodedString.replace(/-/g, '+').replace(/_/g, '/');\n}\n\n/**\n * Convert from true base64 to 'web safe' base64\n *\n * @param  {string} encodedString The code you want to translate to a\n *                                web safe form.\n * @return {string}\n */\nfunction makeWebSafe(encodedString) {\n  return encodedString.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\n * Takes a base64 code and decodes it.\n *\n * @param  {string} code The encoded data.\n * @return {string}\n */\nfunction decodeBase64Hash(code) {\n  // \"new Buffer(...)\" is deprecated. Use Buffer.from if it exists.\n  return Buffer.from ? Buffer.from(code, 'base64') : new Buffer(code, 'base64');\n}\n\n/**\n * Takes a key and signs the data with it.\n *\n * @param  {string} key  Your unique secret key.\n * @param  {string} data The url to sign.\n * @return {string}\n */\nfunction encodeBase64Hash(key, data) {\n  return crypto.createHmac('sha1', key).update(data).digest('base64');\n}\n\n/**\n * Sign a URL using a secret key.\n *\n * @param  {string} path   The url you want to sign.\n * @param  {string} secret Your unique secret key.\n * @return {string}\n */\nexport function sign(path) {\n  const uri = url.parse(path);\n  const safeSecret = decodeBase64Hash(removeWebSafe(GOOGLE_SECRET));\n  const hashedSignature = makeWebSafe(encodeBase64Hash(safeSecret, uri.path));\n  return url.format(uri) + '&signature=' + hashedSignature;\n}","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\n\n\nclass NavigationBar extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\">Project Landmark</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#link\">Link</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                    </Nav>\n                    <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default NavigationBar;\n","import { API } from '../Constants'\nconst GEO_CODE = 'https://maps.googleapis.com/maps/api/geocode/json?';\nexport const KEY = 'AIzaSyAApJlSsL7fsf9ElKRHLLOhEM2pZM00-ho';\n\n// to-do find out whether this is best done through express backen\nexport function getGeoCode(street, city, state, callback) {\n    var f_street = street.replace(/ /g, '+')\n    var f_city = city.replace(/ /g, '+')\n    var f_state = state.replace(/ /g, '+')\n    let f_address = f_street + ',' + '+'+f_city + ',' + '+'+f_state\n\n    fetch(GEO_CODE + 'address=' + f_address +'&key=' + KEY)\n        .then(response => response.json())\n        .then(data =>  callback(data));\n}\n\nexport function getNearby(address, type, callBack) {\n    const lat = address.coords.lat\n    const lng = address.coords.lng\n    var token;\n    fetch(API + 'places/nearby/' \n    + lat +'/'\n    + lng + '/' \n    + type,\n    {\n        method: 'GET',\n        credentials: \"same-origin\", //include, same-origin\n        headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n    })\n    .then(response => {\n        token = response.headers.get('Pragma')\n        return response.json()\n    })\n    .then(data => callBack(data, token))\n    .catch(error => console.error('Error:', error))\n}\n\nexport function getPages(token, callBack) {\n    if (token != null) {\n            fetch(API + 'places/pages/' + token, {\n                method: 'GET',\n                credentials: \"same-origin\", //include, same-origin\n                headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n            })\n            .then(response => {\n                token = response.headers.get('Pragma')\n                return response.json()\n            })\n            .then(data => callBack(data, token))\n            .catch(error => console.error('Error:', error))\n    }\n}\n\nexport function getPhoto(ref, width, height, callback) {\n    fetch(API + 'places/photos/' + ref + '/' + width + '/' + height,\n    {\n        method : 'GET',\n        credentials: \"same-origin\",\n        headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\n    })\n    .then(response =>  response.json())\n    .then(data => callback(data))\n    .catch(error => console.error('Photo fetch error:', error))\n}\n\n","export const UPDATE_BUSINESS_TYPE = 'business_type:updateBusinessType';\n\nexport function updateBusinessType(type) {\n    return {\n      type: UPDATE_BUSINESS_TYPE,\n      payload: {\n        business_type: type\n      }\n    }\n}\n","export const UPDATE_READY = 'state:updateReady';\n\nexport function updateReady(isReady) {\n  return {\n    type: UPDATE_READY,\n    payload: {\n      ready: isReady\n    }\n  }\n}\n","export const UPDATE_ADDRESS = 'address:updateAddress';\n\nexport function updateAddress(newAddress) {\n    return {\n      type: UPDATE_ADDRESS,\n      payload: {\n        address: newAddress\n      }\n    }\n}\n","export const UPDATE_ZIP = 'zip:updateZip';\n\nexport function updateZip(zip) {\n  return {\n    type: UPDATE_ZIP,\n    payload: {\n      zip: zip\n    }\n  }\n}\n","export const UPDATE_STATE = 'state:updateState';\n\nexport function updateState(state) {\n  return {\n    type: UPDATE_STATE,\n    payload: {\n      state: state\n    }\n  }\n}\n","import { createSelector } from 'reselect';\n\nexport const activeSelector = createSelector (\n    state => state.active_place,\n    active_place => active_place\n  )\n  \nexport const addressSelector = createSelector (\n    state => state.address,\n    address => address\n  );\n  \nexport const businessTypeSelector = createSelector (\n    state => state.business_type,\n    business_type => business_type\n  );\n  \nexport const dataRangeSelector = createSelector (\n    state => state.data_range,\n    data_range => data_range\n  )\n\nexport const placesSelector = createSelector (\n    state => state.places,\n    places => places\n  )\n\nexport const stateSelector = createSelector (\n    state => state.state,\n    state => state\n  )\n\nexport const tractSelector = createSelector (\n    state => state.tract,\n    tract => tract\n  )\n\nexport const userSelector = createSelector (\n      state => state.user,\n      user => user\n  )\nexport const zipSelector = createSelector (\n    state => state.zip,\n    zip => zip\n  )\nexport const readySelector = createSelector (\n  state => state.ready,\n  ready => ready\n)","import React from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport { updateAddress} from '../Actions/address-actions'\nimport { updateBusinessType} from '../Actions/business-actions'\nimport { updateZip } from '../Actions/zip-actions'\nimport { updateState } from '../Actions/state-actions'\nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport * as selectors from '../Reducers/selectors'\nimport { GOOGLE_KEY } from '../Constants'\n\nclass AutoCompleteBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '' };\n    this.handleChange = this.handleChange.bind(this)\n    this.onUpdateAddress = this.onUpdateAddress.bind(this)\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = async address => {\n    this.handleChange(address)\n    let zip, number, street, city, state;\n    let geoCode = await geocodeByAddress(address)\n      .then(results => { \n          for (let c of results[0].address_components) {\n              for (let type of c.types) {\n                if (type == 'street_number')\n                    number = c.long_name\n                if (type == 'route')\n                    street = c.short_name\n                if (type == 'locality')\n                    city = c.long_name\n                if (type == 'administrative_area_level_1')\n                    state = c.short_name\n                if (type == \"postal_code\") \n                    zip = c.long_name\n              }\n          }\n          console.log(results)\n          return getLatLng(results[0])\n        })\n      .then(latLng => latLng)\n      .catch(error => console.error('Error', error));\n      let addressState = {}\n      addressState.formatted = address\n      addressState.street = number + '' + street\n      addressState.city = city\n      addressState.state = state\n      addressState.zip = zip\n      addressState.coords = geoCode\n\n      this.onUpdateAddress(addressState)\n  };\n\n  onUpdateAddress(address) {\n    this.props.onUpdateAddress(address)\n}\n\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input style= {{width: '100%'}}\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n\nconst cleanUpAddress = (address) => {\n    let split = address.split(',')\n    let cleanUp = split.map((e) => e.trim())\n    return cleanUp\n}\n\nconst mapStateToProps = createSelector(\n    selectors.addressSelector,\n    selectors.businessTypeSelector,\n    selectors.zipSelector,\n    selectors.stateSelector,\n    (address, business_type, zip, state) => ({\n        address,\n        business_type,\n        zip,\n        state\n    })\n);\n\nconst mapActionsToProps = {\n     onUpdateAddress: updateAddress,\n     onUpdateBusinessType: updateBusinessType,\n     onUpdateZip: updateZip,\n     onUpdateState: updateState\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (AutoCompleteBar);","import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport '../css/App.css';\nimport {getGeoCode} from '../Requests/map-requests'\nimport { updateBusinessType} from '../Actions/business-actions'\nimport { updateReady } from '../Actions/ready-actions'\nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport AutoCompleteBar from './AutoCompleteBar'\nimport * as selectors from '../Reducers/selectors'\n\nclass LookUpForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.onUpdateUser = this.onUpdateUser.bind(this);\n        this.onFormChange = this.onFormChange.bind(this);\n        this.onBusinessFormChange = this.onBusinessFormChange.bind(this);\n        this.submitAddress = this.submitAddress.bind(this);\n        this.onUpdateBusinessType = this.onUpdateBusinessType.bind(this);\n        this.getCoords = this.getCoords.bind(this);\n        this.dispatchAddress = this.dispatchAddress.bind(this);\n        this.onUpdateReady = this.onUpdateReady.bind(this)\n        this.onHandleSubmit = this.onHandleSubmit.bind(this)\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n    }\n\n    onUpdateUser(event) {\n        this.props.onUpdateUser(event.target.value);\n    }\n\n    onUpdateBusinessType(business_type) {\n        this.props.onUpdateBusinessType(business_type)\n    }\n\n    onFormChange(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    onBusinessFormChange(event) {\n        this.setState({[event.target.name]: event.target.value})\n        this.onUpdateBusinessType(event.target.value)\n    }\n\n    onUpdateReady(isReady) {\n        this.props.onUpdateReady(isReady)\n    }\n\n    onHandleSubmit() {\n        if (this.props.address.toString().length > 0)\n            this.onUpdateReady(true)\n        else {\n            this.onUpdateReady(false)\n        }\n    }\n     submitAddress(event) {\n        if (this.state.street !== undefined\n            && this.state.city !== undefined\n            && this.state.state !== undefined\n            && this.state.zip !== undefined) {\n                console.log(\"Attempt submit\")\n \n                // get geocode\n                getGeoCode(this.state.street, this.state.city, this.state.state, this.getCoords)\n            }\n    }\n\n    // gets coords and adds to state \n    getCoords(data) {\n        var res = data.results\n\n        \n        if (res.length > 1) {\n            console.log(\"ERROR, Multiple Locations\")\n        }\n        //To-do handle mulitple location error or null response\n        let coords = res[0].geometry.location\n        this.setState({'coords': coords})\n\n       \n\n        // send full address to store\n        this.dispatchAddress()\n    }\n\n    dispatchAddress() {\n        if (this.state.street !== undefined\n            && this.state.city !== undefined\n            && this.state.state !== undefined\n            && this.state.zip !== undefined\n            && this.state.coords !== undefined) {\n\n                var address = {}\n                address.street = this.state.street;\n                address.city = this.state.city;\n                address.state = this.state.state;\n                address.zip = this.state.zip;\n                address.coords = this.state.coords;\n\n                // update to store\n                this.onUpdateAddress(address)\n                this.onUpdateZip(this.state.zip)\n                this.onUpdateState(this.state.state)\n            }\n    }\n\n    render() {\n       // console.log(\"Form state\", this.state)\n        return (\n            <div className=\"lookup-form-block\">\n                <br></br>\n                <Form.Label color=\"black\">Address</Form.Label>\n                <AutoCompleteBar></AutoCompleteBar>\n                <br></br>\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                        <Form.Label>Business Type</Form.Label>\n                        <Form.Control as=\"select\" name=\"business_type\" onChange={this.onBusinessFormChange}>\n                        <option>restaurant</option>\n                        <option>bar</option>\n                        <option>cafe</option>\n                        <option>beauty_salon</option>\n                        <option>clothing_store</option>\n                        <option>convenvience_store</option>\n                        <option>locksmith</option>\n                        <option>bakery</option>\n                        <option>car_dealer</option>\n                        <option>supermarket</option>\n                    </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n            <Form>\n              \n                <Button variant=\"primary\" onClick={this.onHandleSubmit} >\n                    Submit\n                </Button>\n            </Form>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = createSelector(\n    selectors.businessTypeSelector,\n    selectors.readySelector,\n    selectors.addressSelector,\n    (business_type, ready, address) => ({\n        business_type,\n        ready,\n        address\n    })\n);\n\nconst mapActionsToProps = {\n     onUpdateBusinessType: updateBusinessType,\n     onUpdateReady: updateReady\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (LookUpForm);\n","export const UPDATE_USER = 'users:updateUser';\nexport const SHOW_ERROR = 'users:showError';\n\n\nexport function updateUser(newUser) {\n    return {\n        type: UPDATE_USER,\n        payload: {\n            user: newUser\n        }\n    }\n}\n\nexport function showError() {\n    return {\n        type: SHOW_ERROR,\n        payload: {\n            user: 'ERROR!!'}\n    }\n}\n\n","import { showError } from '../Actions/user-actions'\nimport { API } from '../Constants'\n\nexport function getAllStats(lat, lng, type) {\n    return fetch(API + 'demo/stats/' + type + '/' + lat + '/' + lng)\n        .then(res => res.json())\n        .catch(err => console.error(err))\n}\n\nexport function getPopulation(lat, lng) {\n    return fetch(API + 'demo/population/city/' + lat + '/' + lng)\n        .then(res => res.json())\n        .catch(err => console.error(err))\n}\n\nexport function getSocial(range, lat, lng, callback) {\n    fetch(API + 'demo/social/' + range + '/' + lat +'/'+ lng)\n        .then(response => response.json())\n        .then(data =>  callback(data))\n        .catch(error =>  { \n            showError()\n            console.error('Error:', error)\n        })\n}\n\nexport function getAge(range, lat, lng, callback) {\n    fetch(API + 'demo/age/' + range + '/' + lat +'/'+ lng)\n        .then(response => response.json())\n        .then(data =>  callback(data))\n        .catch(error =>  { \n            showError()\n            console.error('Error:', error)\n        })\n}\n\nexport function getIncome(range, lat, lng, callback) {\n    fetch(API + 'demo/income/' + range + '/' + lat +'/'+ lng)\n        .then(response => response.json())\n        .then(data =>  callback(data))\n        .catch(error =>  { \n            showError()\n            console.error('Error:', error)\n        })\n}\n\nexport function getTract(lat, lng, callback) {\n    fetch(API + 'demo/tract/' + lat +'/'+ lng)\n        .then(response => response.json())\n        .then(data =>  callback(data))\n        .catch(error =>  { \n            showError()\n            console.error('Error:', error)\n        })\n}\n\n","export const UPDATE_DATA_RANGE = 'data_range:updateDataRange';\n\nexport function updateDataRange(type) {\n    return {\n      type: UPDATE_DATA_RANGE,\n      payload: {\n        data_range: type\n      }\n    }\n}\n","import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport { getAge, getIncome, getSocial, getAllStats,   } from '../Requests/city-requests' \nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport { getTradeZoneStats } from '../Requests/tradezone-requests'\nimport { updateDataRange } from '../Actions/dataRange-actions'\nexport const ZIP = 'zip code tabulation area'\nexport const TRADE_ZONE = 'tradeZone'\n\nclass DemographicsPanel extends React.Component {\n    constructor(props) {\n        super(props) \n\n        this.state = { }\n\n        this.onUpdateDataRange = this.onUpdateDataRange.bind(this)\n        this.getData = this.getData.bind(this)\n    }\n\n   onUpdateDataRange(event) {\n    let val = event.target.value\n    if (val === 'zip') {\n        this.props.onUpdateDataRange(ZIP)\n    }\n    else if (val == 'tradeZone') {\n        this.props.onUpdateDataRange(TRADE_ZONE)\n    }\n   }\n\n    async componentDidMount() {\n        await this.getData()\n    }\n\n    async getData() {\n       await getAllStats(this.props.lat, this.props.lng, 'zip').then(data => this.setState({ zipStats : data }))\n       await getAllStats(this.props.lat, this.props.lng, 'tradezone').then(data => this.setState({tradeZoneStats : data}))\n\n        /*\n        // zip\n        getSocial(ZIP, this.props.lat, this.props.lng, (data) => this.setState({socialZip : data}))\n        getAge(ZIP, this.props.lat, this.props.lng, (data) => this.setState({ageZip: data}))\n        getIncome(ZIP, this.props.lat, this.props.lng, (data) =>  this.setState({incomeZip : data}))  \n        // trade zone\n        getTradeZoneStats(this.props.lat, this.props.lng, 'social').then((data) => this.setState({socialTZ : data}))\n        getTradeZoneStats(this.props.lat, this.props.lng, 'income').then((data) => this.setState({incomeTZ : data}))\n        getTradeZoneStats(this.props.lat, this.props.lng, 'age').then((data) => this.setState({ageTZ : data}))\n        */\n    }\n    render() {\n\n        console.log(this.state)\n       \n        var social_data =  {\n            summary: {\n                gender : {},\n            },\n            \n            race : {},\n            education : {},\n            marital_status : {},\n            employment : {},\n            transportation : {}\n        }\n        var income_data = {}\n\n        if (this.props.data_range == ZIP) {\n            if (this.state.zipStats != null) {\n                social_data = this.state.zipStats.social\n                income_data = this.state.zipStats.income\n            }\n        } else if (this.props.data_range == TRADE_ZONE) {\n            if (this.state.tradeZoneStats != null) {\n                social_data = this.state.tradeZoneStats.social\n                income_data = this.state.tradeZoneStats.income\n            }\n        }\n\n        /**\n         * \n         *  if (this.props.data_range == ZIP) {\n            if (this.state.socialZip != null) \n                social_data = this.state.socialZip\n            if (this.state.incomeZip != null) \n                income_data = this.state.incomeZip\n            if (this.state.ageZip != null)\n                age_data = this.state.ageZip\n\n        } \n        else if (this.props.data_range == TRADE_ZONE) {\n            if (this.state.socialTZ != null) {\n                social_data = this.state.socialTZ\n                console.log(social_data)\n            }\n            if (this.state.incomeTZ != null) \n                income_data = this.state.incomeTZ\n            if (this.state.ageTZ != null)\n                age_data = this.state.ageTZ\n        }\n         */\n\n        const NestedCard = ({name, data, key_i}) => {\n            return (\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey={key_i}>\n                        {name}\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey={key_i} >\n                    <Card.Body>\n                        <div style={{overflowX: \"auto\", overflowY: \"auto\", width: \"100%\"}}>\n                        <Table striped bordered hover variant=\"dark\" >\n                        <tbody>\n                            {Object.entries(data).map((data, i) => {\n                                return (\n                                    <tr key={i}>\n                                        <td>{data[0]}</td><td>{data[1]}</td>\n                                    </tr>\n                                );\n                                })}\n                        </tbody>\n                        </Table>\n                        </div>\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            )\n        }\n        return (\n           <div className={this.props.orientation}>\n            <div style={{width: '100hv'}}>\n               \n            </div>\n                <br></br>\n                <div style={{ textAlign: 'center'}}>\n                    <strong>Demographics</strong>\n                  </div>\n                  <br></br>\n                  <div style = {{display: 'flex'}}>\n                  <button className='map-control_button'  onClick={this.onUpdateDataRange} value= {'zip'} style={{margin: 'auto', width: '50%', height: '10%', padding: '0'}}>\n                    Zip\n                </button>\n                <button className='map-control_button'  onClick={this.onUpdateDataRange} value = {'tradeZone'} style={{margin: 'auto', width: '50%', height: '10%', padding: '0'}}>\n                    Trade Zone\n                </button>\n                  <br></br>\n                </div>\n               <Accordion defaultActiveKey=\"0\">\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                    General\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\" >\n                    <Card.Body>\n                        <Table striped bordered hover variant=\"dark\" >\n                        <tbody>\n                            <tr>\n                            <td>Business</td><td>{this.props.business_type}</td>\n                             </tr><tr>\n                             <td>City</td><td>{ this.props.city}</td>\n                             </tr><tr>\n                             <td>Street</td><td>{this.props.street}</td>\n                             </tr><tr>\n                            <td>Population</td><td>{social_data.summary.population}</td>\n                                </tr><tr>\n                            <td>Median Age</td><td>{social_data.summary.median_age}</td>\n                                </tr><tr>\n                            <td>Median Household Income</td><td>{income_data.median}</td>\n                            </tr><tr>\n                            <td>Males</td><td>{social_data.summary.gender.males}</td>\n                             </tr><tr>\n                            <td>Females</td><td>{social_data.summary.gender.females}</td>\n                             </tr>\n                        </tbody>\n                        </Table>\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                \n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                    Social\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>\n                        <Accordion defaultActiveKey=\"0\">\n                        <NestedCard name={\"Race\"} data={social_data.race} key_i={\"0\"}></NestedCard>\n                        <NestedCard name={\"Education\"} data={social_data.education} key_i={\"1\"}></NestedCard>\n                        <NestedCard name={\"Employment\"} data={social_data.employment} key_i={\"2\"}></NestedCard>\n                        <NestedCard name={\"Marital Status\"} data={social_data.marital_status} key_i={\"3\"}></NestedCard>\n                        <NestedCard name={\"Transportation\"} data={social_data.transportation} key_i={\"4\"}></NestedCard>\n                        </Accordion>\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <NestedCard name={\"Income\"} data={income_data} key_i={\"2\"}></NestedCard>\n                </Accordion>\n           </div>\n        );\n    }\n}\n\nconst addressSelector = createSelector (\n    state => state.address,\n    address => address\n)\n\nconst tractSelector = createSelector (\n    state => state.tract,\n    tract => tract\n)\n\nconst dataRangeSelector = createSelector (\n    state => state.data_range,\n    data_range => data_range\n)\n\nconst mapStateToProps = createSelector(\n    tractSelector,\n    addressSelector,\n    dataRangeSelector,\n    (tract, address, data_range) => ({\n        tract, address, data_range\n    })\n);\n\nconst mapActionsToProps = {\n    onUpdateDataRange: updateDataRange\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (DemographicsPanel);","\nexport const UPDATE_PLACES = 'places:updatePlaces';\nconst KEY='28a04efd887ab5cf335f99aabcde1978452de2cf';\n\nexport function updatePlaces(newPlaces) {\n    return {\n      type: UPDATE_PLACES,\n      payload: {\n        places: newPlaces\n      }\n    }\n}\n","export const ACTIVATE_PLACE = 'active_place:activatePlace';\n\nexport function updateActivePlace(place) {\n  return {\n    type: ACTIVATE_PLACE,\n    payload: {\n      active_place: place\n    }\n  }\n}\n","export const UPDATE_TRACT = 'tract:updateTract';\n\nexport function updateTract(tract) {\n  return {\n    type: UPDATE_TRACT,\n    payload: {\n      tract: tract\n    }\n  }\n}\n","\n// get lat/lng of 5 points in a circle around specified center where radius = distance\n// https://www.movable-type.co.uk/scripts/latlong.html\nexport function getPoints(center, distance) {\n    let φ1 = toRadians(center.lat)\n    let λ1 = toRadians(center.lng) \n    let d = distance\n    let R = 6371 // radius of earth in KM\n    let points = []\n    let divisor = 1\n    for (let i = 0; i < divisor; i++) {\n        let brng =  toRadians((i * (360/divisor)))\n        let φ2 = Math.asin(Math.sin(φ1)*Math.cos(d/R) +\n            Math.cos(φ1)*Math.sin(d/R)*Math.cos(brng));\n        let λ2 = λ1 + Math.atan2(Math.sin(brng)*Math.sin(d/R)*Math.cos(φ1),\n            Math.cos(d/R)-Math.sin(φ1)*Math.sin(φ2));\n        let coords = {}\n        coords.lat = toDegrees(φ2)\n        coords.lng = toDegrees(λ2)\n        points.push(coords)\n    }\n    return points\n}\n\nconst toRadians = (num) =>  num * (Math.PI/180)\nconst toDegrees = (num) =>  num * (180/Math.PI)","import { google } from '../Constants.js'\nimport React, { Component } from 'react';\n\nexport const renderCircle = (radius, color, map, center) => new google.maps.Circle({\n    strokeColor: color,\n    strokeOpacity: 0.5,\n    strokeWeight: 4,\n    fillColor: \"#00ff00\",\n    fillOpacity: 0.0,\n    map,\n    center: center,\n    radius: radius\n  });\n\nexport const renderMarker = (key, position, map, title, icon, label) =>  new google.maps.Marker({\n    key: key,\n    position: position,\n    map: map,\n    title: title,\n    icon: icon,\n    labelContent : label\n  });\n\nexport function renderInfoContent(place) {\n  var details = this.state.place_details.get(place.id)\n  var photo_url = this.state.place_photos.get(place.id)\n\n  /**\n   * <ReactStreetview \n            height = '200px'\n            width = '600px'\n            apiKey={GOOGLE_KEY}\n            streetViewPanoramaOptions={streetViewPanoramaOptions}\n          />\n   */\n  return (\n  <div id=\"content\">\n    <div id=\"siteNotice\">\n    </div>\n      <h3 style={{textAlign: 'center'}}>{place.name}</h3>\n      <br></br>\n      <img style={{display: 'block',  marginRight: 'auto', marginLeft: 'auto', width: '50%'}}src={photo_url}></img> \n      <br></br>\n      <div id=\"bodyContent\">\n        <p style={{textAlign: 'center'}}><strong>{details.formatted_address}</strong></p>\n        <p><a target=\"_blank\" href={details.website}>{details.website}</a></p>\n        <p>\n          Rating: {place.rating} / 5.0\n          <br></br>\n          Total Ratings: {place.user_ratings_total}\n          <br></br>\n          Open Now: {this.getOpen(place.opening_hours)}\n        </p>\n    </div>\n  </div>\n  )\n}\n\nexport const BLUE_MARKER = 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\nexport const YELLOW_MARKER = 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'\nexport const RED_MARKER = 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\nexport const GREEN_MARKER = 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'","import React, { Component } from \"react\";\nimport Switch from \"react-switch\";\n\nclass SliderSwitch extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { checked: true };\n      this.handleChange = this.handleChange.bind(this);\n    }\n   \n    handleChange(checked) {\n      this.setState({ checked });\n      this.props.switchFunction(checked)\n    }\n   \n    render() {\n      return (\n        <label htmlFor=\"material-switch\">\n                <Switch\n                    checked={this.state.checked}\n                    onChange={this.handleChange}\n                    onColor=\"#86d3ff\"\n                    onHandleColor=\"#2693e6\"\n                    handleDiameter={30}\n                    uncheckedIcon={false}\n                    checkedIcon={false}\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                    height={20}\n                    width={48}\n                    className=\"react-switch\"\n                    id=\"material-switch\"\n                />\n        </label>\n      );\n    }\n  }\n\nexport default SliderSwitch ","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { getNearby, getPages, getPhoto } from '../Requests/map-requests' \nimport '../css/App.css';\nimport { connect } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport { updatePlaces } from '../Actions/places-actions'\nimport { updateActivePlace } from '../Actions/active-actions'\nimport ReactDOMServer from 'react-dom/server';\nimport { getZipCartography, getTradeZoneCartography, getTractCartography } from '../Requests/cartography-requests'\nimport { getPopulation  } from '../Requests/city-requests' \nimport {updateTract} from '../Actions/tract-actions'\nimport Form from 'react-bootstrap/Form'\nimport { getPoints } from '../Helpers/TradeZone'\nimport { ZIP, TRADE_ZONE} from '../Components/DemographicsPanel'\nimport { mapOptions, GOOGLE_KEY, google } from '../Constants.js'\nimport { renderCircle, renderMarker, renderInfoContent, BLUE_MARKER, YELLOW_MARKER, GREEN_MARKER, RED_MARKER } from './GoogleMapComponents'\nimport { activeSelector, addressSelector, businessTypeSelector, dataRangeSelector, placesSelector, stateSelector, tractSelector, zipSelector } from '../Reducers/selectors'\nimport SliderSwitch from './UI/SliderSwitch'\n\nconst infoWindow =  new google.maps.InfoWindow()\nclass SimpleMap extends Component {\n  static defaultProps = {\n    defaultCenter: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    defaultzoom: 11\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      center: this.props.center,\n      map : undefined,\n      markers : new Map(),\n      place_details : new Map(),\n      place_photos : new Map(),\n      address_line : this.props.address.street + ', ' + this.props.address.city + ' ' + this.props.address.state + ', ' + this.props.address.zip,\n      boundaries : getPoints(this.props.center, 0.804),\n      cartography : {},\n      display_cartography: true,\n    }  \n  \n    this.onUpdatePlaces = this.onUpdatePlaces.bind(this);\n    this.onUpdateActivePlace = this.onUpdateActivePlace.bind(this);\n    this.onUpdateTract = this.onUpdateTract.bind(this)\n    this.loadMorePlaces = this.loadMorePlaces.bind(this);\n    this.lessPlaces = this.lessPlaces.bind(this);\n    this.loadAllPlaces = this.loadAllPlaces.bind(this);\n    this.loadMorePlaces = this.loadMorePlaces.bind(this);\n    this.loadDefaultPlaces = this.loadDefaultPlaces.bind(this);\n    this.exampleRef = React.createRef()\n    this.updateMarkers = this.updateMarkers.bind(this)\n    this.updateMarker = this.updateMarker.bind(this)\n    this.updateInfoWindow = this.updateInfoWindow.bind(this)\n    this.getopen  = this.getOpen.bind(this)\n    this.getPlaceDetails = this.getPlaceDetails.bind(this)\n    this.updatePlaceDetails = this.updatePlaceDetails.bind(this)\n    this.onBusinessFormChange = this.onBusinessFormChange.bind(this);\n    this.loadCartography = this.loadCartography.bind(this)\n    this.renderCartography = this.renderCartography.bind(this)\n    this.getInfoContent = this.getInfoContent.bind(this)\n    this.handleSwitch = this.handleSwitch.bind(this)\n    this.clearCartography = this.clearCartography.bind(this)\n    this.checkIsCity = this.checkIsCity.bind(this)\n    this.onPlacesCountChange = this.onPlacesCountChange.bind(this)\n    this.updateRadii =this.updateRadii.bind(this)\n\n    // to-do create function updateInfoWindow\n    setInterval( () => {\n      let isBound = (infoWindow.getMap() ? true : false)\n      if (!isBound && infoWindow.marker != undefined) {\n        let img = ''\n        if (infoWindow.marker.place.types.includes(this.props.business_type)) {\n          img = RED_MARKER\n        } else {\n          img = YELLOW_MARKER\n        }\n        infoWindow.marker.marker.setIcon(img)\n      }\n    }, 500);\n  }\n\n  async componentDidMount() {\n    this.loadDefaultPlaces()\n    let isCity = await this.checkIsCity()\n    this.setState({ isCity : isCity})\n    this.updateRadii()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // active place change\n    if (this.props.active_place !== prevProps.active_place) \n      if (this.props.active_place.toString().length > 0) {\n        this.setState({center : this.props.active_place.geometry.location})\n\n        // highlight marker on map\n        if (prevProps.active_place.toString().length > 0)\n          this.updateMarker(this.state.markers.get(prevProps.active_place.id))\n        this.state.markers.get(this.props.active_place.id).marker.setIcon(GREEN_MARKER)\n        google.maps.event.trigger(this.state.markers.get(this.props.active_place.id).marker, 'click')\n      }\n\n    // update markers \n    if (this.props.places !== prevProps.places) {\n      if (this.state.map != undefined) {\n        Array.from(this.state.markers).map((marker, i) => {\n          marker[1].marker.setMap(null)\n        })\n        this.updateMarkers(this.state.map)\n      }\n    }\n    // update geojson\n    if (this.state.map !== undefined) {\n      if (this.props.data_range !== prevProps.data_range) {\n        if (this.state.display_cartography)\n          this.renderCartography()\n      }   \n    }\n  }\n\n  async checkIsCity() {\n    let data = await getPopulation(this.props.center.lat, this.props.center.lng).then(res => res)\n      .catch(err => console.error('city error', err))\n    let population = Number(data[0].B01003_001E)\n    console.log('RFM', population, population >= 1000000)\n    return population >= 1000000\n  }\n  clearCartography() {\n    this.state.map.data.forEach((feature) => {\n      this.state.map.data.remove(feature)\n    })\n  }\n  renderCartography() {\n    // clear data layer \n      this.clearCartography()\n      // render cartography\n      if (this.props.data_range == ZIP) {\n        if (this.state.cartography.zip !== undefined)\n          this.state.cartography.zip.forEach(featureSet => this.state.map.data.addGeoJson(featureSet))\n      } \n      else if (this.props.data_range == TRADE_ZONE) {\n        if (this.state.cartography.tradezone !== undefined) {\n          this.state.cartography.tradezone.forEach(featureSets => {\n            featureSets.forEach(featureSet => this.state.map.data.addGeoJson(featureSet))\n          })\n       } else {\n         setTimeout(() => this.renderCartography(), 100)\n       }\n    }\n  }\n\n  loadCartography() {\n     getZipCartography(this.props.address.state.toString().toLowerCase(), this.props.address.zip).then((data) => {\n      let mCartography = Object.assign({}, this.state.cartography)\n      mCartography.zip = data\n      this.setState({cartography : mCartography})\n      // init geojson rendering\n      this.renderCartography()\n    })\n    getTradeZoneCartography(this.props.address.state.toString().toLowerCase(), this.props.center.lat, this.props.center.lng)\n      .then((data) => {\n        let mCartography = Object.assign({}, this.state.cartography)\n        mCartography.tradezone = data\n        this.setState({ cartography : mCartography})\n      })\n  }\n    \n  loadDefaultPlaces() {\n    getNearby(this.props.address, this.props.business_type, (data, token) => {\n      var morePlaces = this.props.places.concat(data)\n      this.setState({places: morePlaces})\n      this.setState({token: token}, () => {\n        this.onUpdatePlaces(data)\n      })\n    })  \n  }\n\n  loadPlaceType(type) {\n    getNearby(this.props.address, type, (data, token) => {\n      var morePlaces = this.props.places.concat(data)\n      this.setState({places: morePlaces})\n      this.setState({token: token}, () => {\n        this.onUpdatePlaces(data)\n      })\n    })\n  }\n\n  loadAllPlaces() {\n    getNearby(this.props.address, 'establishment', (data, token) => {\n      var morePlaces = this.props.places.concat(data)\n      this.setState({places: morePlaces})\n      this.setState({token: token}, () => {\n        this.onUpdatePlaces(data)\n      })\n    })\n  }\n\n  loadMorePlaces() {\n      if (this.props.places.length < 60) {\n        getPages(this.state.token, (data, token) => {\n        var morePlaces = this.props.places.concat(data)\n        this.setState({places: morePlaces}, () => {\n          this.onUpdatePlaces(morePlaces)\n        })\n      })\n    }\n  }\n  lessPlaces() {\n    if (this.props.places.length > 20) {\n      var places = this.props.places\n      places = places.slice(0, (places.length-20))\n      this.setState({places: places})\n      this.onUpdatePlaces(places)\n    }\n  }\n  onBusinessFormChange(event) {\n    console.log(this.state)\n    this.setState({[event.target.name]: event.target.value})\n    this.loadPlaceType(event.target.value)\n  }\n  // to do clean up & cache ffs\n  onPlacesCountChange(event) {\n    console.log(this.state)\n    this.setState({places_count: event.target.value})\n\n    if (event.target.value == 20) {\n      var places = this.props.places\n      places = places.slice(0, 20)\n      this.setState({places: places})\n      this.onUpdatePlaces(places)\n    } else if (event.target.value == 40) {\n      if (this.props.places.length < 40) {\n        console.log('rfm', '< 40')\n          getPages(this.state.token, (data, token) => {\n            var morePlaces = this.props.places.concat(data)\n            this.setState({places: morePlaces}, () => {\n              this.onUpdatePlaces(morePlaces)\n            })\n          })\n        } else {\n          console.log('rfm', '>= 40')\n          var places = this.props.places\n          places = places.slice(0, 40)\n          console.log(places.length)\n          this.setState({places: places})\n          this.onUpdatePlaces(places)\n        }\n\n    } else if (event.target.value == 60) {\n      if (this.props.places.length < 40) {\n        getPages(this.state.token, (data, token) => {\n          var morePlaces = this.props.places.concat(data)\n          this.setState({places: morePlaces}, () => {\n            this.onUpdatePlaces(morePlaces)\n          })\n        })\n        getPages(this.state.token, (data, token) => {\n          var morePlaces = this.props.places.concat(data)\n          this.setState({places: morePlaces}, () => {\n            this.onUpdatePlaces(morePlaces)\n          })\n        })\n      } else if (this.state.places.length == 40) {\n        getPages(this.state.token, (data, token) => {\n          var morePlaces = this.props.places.concat(data)\n          this.setState({places: morePlaces}, () => {\n            this.onUpdatePlaces(morePlaces)\n          })\n        })\n      }\n     else {\n        var places = this.props.places\n        places = places.slice(0, 60)\n        this.setState({places: places})\n        this.onUpdatePlaces(places)\n      }\n    }\n  }\n  onUpdatePlaces(data) {\n    this.props.onUpdatePlaces(data)\n  }\n  onUpdateActivePlace(data) {\n    this.props.onUpdateActivePlace(data)\n  }\n  onUpdateTract(data) {\n    this.props.onUpdateTract(data)\n  }\n  getInfoContent(place) {\n   return renderInfoContent.apply(this, [place])\n  }\n\n  updateRadii() {\n    // radii\n    if (this.state.isCity != undefined) {\n      console.log('RFM', this.state.isCity)\n      if (this.state.isCity) {\n        //  0.220 : 0.402);\n         const circle1 = renderCircle(402, \"#00ff00\", this.state.map, this.state.center) //0.0125 miles\n         const circle2 = renderCircle(804, \"#ffff00\", this.state.map, this.state.center) // 0.25 miles\n          // to-do cleanup, add label\n        let points = getPoints(this.state.center, 0.402)\n        renderMarker('circle1', points[0], this.state.map, '0.25 miles', GREEN_MARKER)\n        points = getPoints(this.state.center, 0.804)\n        renderMarker('circle1', points[0], this.state.map, '0.5 miles', YELLOW_MARKER)\n\n      } else if (!this.state.isCity) {\n       const circle1 = renderCircle(4828, \"#00ff00\", this.state.map, this.state.center) // 3 miles\n       const circle2 = renderCircle(8046, \"#ffff00\", this.state.map, this.state.center) // 5 miles\n       // to-do cleanup, add label\n        let points = getPoints(this.state.center, 4.828)\n        let marker1 = renderMarker('circle1', points[0], this.state.map, '3 miles', GREEN_MARKER)\n        points = getPoints(this.state.center, 8.046)\n        renderMarker('circle1', points[0], this.state.map, '5 miles', YELLOW_MARKER)\n      }\n    }\n  }\n    \n   // markers\n  updateMarkers = (map) =>  {\n    Array.from(this.props.places).map((place, i) => {\n    var id= place.id\n    var img = ''\n    if (id === this.props.active_place.id) {\n      img = GREEN_MARKER\n    } else if (place.types.includes(this.props.business_type)) {\n      img = RED_MARKER\n    } else {\n      img = YELLOW_MARKER\n    }\n    let marker = renderMarker(i, place.geometry.location, map, place.name, img)\n  this.state.markers.set(id, {marker: marker, place: place})\n  })\n  this.updateInfoWindow(map)\n}\n// Array.from(p, ([key, value]) => value * value)\nupdateInfoWindow = (map) => Array.from(this.state.markers, ([key, value]) =>  {\n\n  // to close window on exit\n  value.marker.addListener('click',  () => {\n       this.onUpdateActivePlace(value.place)\n        this.updatePlaceDetails( () => {\n          infoWindow.setContent(ReactDOMServer.renderToStaticMarkup(this.getInfoContent(value.place)))\n          infoWindow.marker = value\n          infoWindow.open(map, value.marker) \n        });\n       })\n})\n\nupdatePlaceDetails(callback) {\n\n  // get details\n  if (!this.state.place_details.has(this.props.active_place.id)) {\n    this.getPlaceDetails(this.state.map, this.props.active_place.place_id, (details) => {\n      this.state.place_details.set(this.props.active_place.id, details)\n\n         // get photo\n    if (!this.state.place_photos.has(this.props.active_place.id)) {\n      if (this.props.active_place.photos !== undefined) {\n       getPhoto(this.props.active_place.photos[0].photo_reference, 400, 400, (data) => {\n        this.state.place_photos.set(this.props.active_place.id, data.url)\n        callback()\n      })\n      } else {\n        callback()\n      }\n    }\n    })\n  } else {\n    callback()\n  }\n}\n\ngetPlaceDetails = (map, place_id, callback) => {\n  var service = new google.maps.places.PlacesService(map);\n  var request = {\n    placeId: place_id,\n  //  fields: ['name', 'formatted_address', 'place_id', 'geometry']\n    fields: ['formatted_address', 'opening_hours', 'website']\n  };\n  \n     // get details\n    service.getDetails(request, (place, status) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        callback(place)\n      } else {\n        console.log('error', status)\n      }\n    });\n  }\n\ngetOpen = (opening_hours) => {\n  if (opening_hours === undefined)\n    return 'Unknown'\n  else {\n    let answer = (opening_hours.is_open) ? \"Yes\" : \"No\"\n    return answer\n  }\n}\nupdateMarker = (marker) => {\n  var img = ''\n  if (marker.place.id === this.props.active_place.id) {\n    img = GREEN_MARKER\n  } else if (marker.place.types.includes(this.props.business_type)) {\n    img = RED_MARKER\n  } else {\n    img = YELLOW_MARKER\n  }\n  marker.marker.setIcon(img)\n}\n\nhandleSwitch = (checked) => {\n  if (checked) {\n   // this.setState({ display_cartography : true })\n    this.renderCartography()\n  } else {\n  //  this.setState({ display_cartography : false })\n    this.clearCartography()\n  }\n}\n\n  render() {\n    const apiIsLoaded = (map, maps, center) => {\n      this.state.map = map\n      let yourBusinessMarker = renderMarker(undefined, center, map, 'Your Business', BLUE_MARKER)\n      var content ='<h3>Your ' + this.props.business_type.toString() +'</h3>'\n         yourBusinessMarker.addListener('click', () => {\n          infoWindow.setContent(content)\n          infoWindow.open(map, yourBusinessMarker)\n          infoWindow.marker = yourBusinessMarker\n         console.log(infoWindow)\n      })\n\n      this.loadCartography()\n    };\n\n  const MapButtons = () => \n  <div className='map-control_bar'>\n    \n         <div style = {{ marginLeft: '5%'}}>\n          <p style={{textAlign: 'center', marginBottom: '-3%'}}> Zone</p>\n         <SliderSwitch switchFunction={this.handleSwitch}></SliderSwitch>\n         </div>\n         <Form.Control value={this.state.business_type} as=\"select\" name=\"business_type\" onChange={this.onBusinessFormChange} style={{width: '200px', textAlign: 'center', display: 'inline', marginLeft: '75px', marginRight: '75px'}}>\n                        <option>restaurant</option>\n                        <option>bar</option>\n                        <option>cafe</option>\n                        <option>beauty_salon</option>\n                        <option>clothing_store</option>\n                        <option>convenvience_store</option>\n                        <option>locksmith</option>\n                        <option>bakery</option>\n                        <option>car_dealer</option>\n                        <option>supermarket</option>\n          </Form.Control>\n          <button className='map-control_button'  onClick={this.loadDefaultPlaces} className='map_buttons' style={{float: 'right' }}>\n           Competition\n          </button> \n          <button className='map-control_button'  onClick={this.loadAllPlaces} className='map_buttons' style={{float: 'right' }}>\n           All\n          </button> \n          <Form.Control value={this.state.places_count} as=\"select\" name=\"places_count\" onChange={this.onPlacesCountChange} style={{width: '100px', textAlign: 'center', display: 'inline', float: 'right'}}>\n                        <option>20</option>\n                        <option>40</option>\n                        <option>60</option>\n          </Form.Control>\n         </div>\n \n    return (\n      // Important! Always set the container height explicitly\n      // to-do export styling to .css \n      <div className='map_container'>\n         <MapButtons></MapButtons>\n        \n      <div style={{height: this.props.height}}>\n        <GoogleMapReact\n          options={mapOptions}\n          bootstrapURLKeys={{ key: GOOGLE_KEY}}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          center={this.state.center}\n          yesIWantToUseGoogleMapApiInternals={true}\n          layerTypes={['TrafficLayer', 'TransitLayer']}\n          id={'map'}\n          onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps, this.state.center)}\n        >\n        </GoogleMapReact>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createSelector(\n  placesSelector, \n  activeSelector,\n  addressSelector,\n  businessTypeSelector,\n  zipSelector,\n  stateSelector,\n  tractSelector,\n  dataRangeSelector,\n  (places, active_place, address, business_type, zip, state, tract, data_range) => ({\n    places, \n    active_place,\n    address,\n    business_type,\n    zip,\n    state, \n    tract,\n    data_range\n  })\n);\n \nconst mapActionsToProps = {\n  onUpdatePlaces: updatePlaces,\n  onUpdateActivePlace: updateActivePlace,\n  onUpdateTract: updateTract\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (SimpleMap);","import { showError } from '../Actions/user-actions'\nimport { API } from '../Constants'\n\nexport function getZipCartography(state, zip) {\n    let URL = API +'cart/zip/' + state +'/'+ zip\n    console.log(URL)\n    return fetch(URL)\n        .then(response => response.json())\n        .catch(error =>  { \n            showError()\n            console.error('Zip Cartography Error:',API +'cartography/zip/' + state +'/'+ zip,  error)\n        })\n}\n\nexport function getTradeZoneCartography(state, lat, lng) {\n    return fetch(API + 'cart/tradezone/' + state + '/' +  lat + '/' + lng)\n        .then(response => response.json())\n        .catch(error => {\n            showError()\n            console.error('Trade Zone Cartography Error:', API + 'zcartography/tradezone/' + state +'/' + lat + '/' + lng, error)\n        })\n}\n\nexport function getTractCartography(state, tract) {\n    return fetch(API +'cart/tract/' + state +'/'+ tract)\n        .then(response => response.json())\n        .catch(error =>  { \n            showError()\n            console.error('Tract Cartograhpy Error:', error)\n        })\n}\n\n\n","\nimport { applyMiddleware, compose, createStore, combineReducers} from 'redux';\nimport userReducer from '../Reducers/user-reducer'\nimport addressReducer from '../Reducers/address-reducer'\nimport placesReducer from '../Reducers/places-reducers'\nimport activeReducer from '../Reducers/active-reducer'\nimport thunk from 'redux-thunk';\nimport businessReducer from '../Reducers/business-reducer';\nimport zipReducer from '../Reducers/zip-reducer';\nimport stateReducer from '../Reducers/state-reducer'\nimport tractReducer from '../Reducers/tract-reducer'\nimport dataRangeReducer from '../Reducers/dataRange-reducer'\nimport readyReducer from '../Reducers/ready-reducer'\nimport { ZIP, TRADE_ZONE} from  '../Components/DemographicsPanel'\n\nconst allReducers = combineReducers({\n    user: userReducer,\n    address: addressReducer,\n    places: placesReducer,\n    business_type: businessReducer,\n    active_place: activeReducer,\n    zip: zipReducer,\n    state: stateReducer,\n    tract: tractReducer,\n    data_range: dataRangeReducer,\n    ready: readyReducer\n});\n\nconst allStoreEnhancers = compose(\n    applyMiddleware(thunk),\n //   window.devToolsExtension && window.devToolsExtension()\n);\n\nconst store = createStore(\n    allReducers, \n    {\n    user: 'Rob',\n    address: undefined,\n    places: [],\n    business_type: 'restaurant',\n    active_place: undefined,\n    state: undefined,\n    zip: undefined,\n    tract: undefined,\n    data_range: ZIP,\n    ready: false\n    },\n   \n    allStoreEnhancers\n    );\n\nconsole.log(\"store init state: \", store.getState())\n\nexport default store;","import { UPDATE_USER, SHOW_ERROR } from '../Actions/user-actions';\n\nexport default function userReducer(state = '', {type, payload}) {\n    switch (type) {\n        case UPDATE_USER:\n                console.log(\"payload\", payload)\n            return payload.user;\n        case SHOW_ERROR:\n            return payload.user;\n        default:\n            return state;\n    }\n}","import { UPDATE_ADDRESS } from '../Actions/address-actions';\n\nexport default function addressReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_ADDRESS:\n            return payload.address;\n        default:\n            return state;\n    }\n}","import { UPDATE_PLACES } from '../Actions/places-actions';\n\nexport default function placesReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_PLACES:\n            return payload.places;\n        default:\n            return state;\n    }\n}","import { UPDATE_BUSINESS_TYPE } from '../Actions/business-actions';\n\nexport default function businessReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_BUSINESS_TYPE:\n            return payload.business_type;\n        default:\n            return state;\n    }\n}\n","import { ACTIVATE_PLACE } from '../Actions/active-actions';\n\nexport default function activeReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case ACTIVATE_PLACE:\n            return payload.active_place;\n        default:\n            return state;\n    }\n}\n\n","import { UPDATE_ZIP } from '../Actions/zip-actions';\n\nexport default function zipReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_ZIP:\n            return payload.zip;\n        default:\n            return state;\n    }\n}","import { UPDATE_STATE } from '../Actions/state-actions';\n\nexport default function stateReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_STATE:\n            return payload.state;\n        default:\n            return state;\n    }\n}","import { UPDATE_TRACT } from '../Actions/tract-actions';\n\nexport default function tractReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_TRACT:\n            return payload.tract;\n        default:\n            return state;\n    }\n}","import { UPDATE_DATA_RANGE } from '../Actions/dataRange-actions';\n\nexport default function dataRangeReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_DATA_RANGE:\n            return payload.data_range;\n        default:\n            return state;\n    }\n}\n","import { UPDATE_READY } from '../Actions/ready-actions';\n\nexport default function readyReducer(state = '', {type, payload}) {\n    \n    switch (type) {\n       \n        case UPDATE_READY:\n            return payload.ready;\n        default:\n            return state;\n    }\n}\n\n","import { connect } from 'react-redux'\nimport React from 'react'; \nimport Table from 'react-bootstrap/Table'\nimport store from '../Redux/store'\nimport { createSelector } from 'reselect';\nimport { updateActivePlace } from '../Actions/active-actions';\n\nclass PlacesList extends React.Component {\n\n  constructor(props) {\n    super(props)\n    \n    this.state = store.getState()\n    this.onUpdateActivePlace = this.onUpdateActivePlace.bind(this)\n    this.activatePlace = this.activatePlace.bind(this)\n\n    // listen to store\n    store.subscribe(() => {\n      this.setState(store.getState())\n    });\n  }\n\n  onUpdateActivePlace(data) {\n    this.props.onUpdateActivePlace(data)\n  }\n\n  activatePlace(event) {\n    console.log('click')\n    this.onUpdateActivePlace(event.target.value)\n  }\n  render() {\n    return (\n      <div className='places-list'>\n      <br></br>\n      <p style={{textAlign: 'center'}} ><strong>Nearby Businesses</strong></p>\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.places.map((place, i) => {\n              return (\n                <tr\n                  key={i}\n                  onClick={() =>  this.onUpdateActivePlace(place)}\n                >\n                  <td>{i+1}</td>\n                  <td>{place.name}</td>\n                  <td>{<img src={place.icon}style={{width: '32px', height: '32px'}} ></img>}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        </div>);\n    }\n}\n\nconst activePlaceSelector = createSelector (\n  state => state.active_place,\n  active_place => active_place\n)\n\nconst placesSelector = createSelector (\n  state => state.places,\n  places => places\n)\n\nconst mapStateToProps = createSelector(\n  activePlaceSelector, placesSelector,\n  (active_place, places) => ({\n    active_place,\n    places\n  })\n);\n \nconst mapActionsToProps = {\n  onUpdateActivePlace: updateActivePlace\n};\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(PlacesList);","import React from 'react'\nimport '../css/App.css'\nimport NavigationBar from './NavigationBar'\nimport LookUpForm from './LookUpForm'\nimport DemographicsPanel from './DemographicsPanel'\nimport { connect } from 'react-redux'\nimport SimpleMap from './Map'\nimport PlacesList from './PlacesList'\nimport * as selectors from '../Reducers/selectors'\nimport ReactStreetview from 'react-streetview';\nimport { StaticGoogleMap, Marker} from 'react-static-google-map';\nimport { createSelector } from 'reselect';\nimport { GOOGLE_KEY } from '../Constants'\nimport { sign } from '../Signing/urlSigner'\n\nclass App extends React.Component { \n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    console.log(\"store\", this.props)\n  \n    window.scrollTo({ top: 0, behavior: 'smooth' })\n\n    if (this.props.ready) {\n\n      console.log('sign',  this.props.address.coords.lat.toString(),  this.props.address.coords.lng.toString(),  '/maps/api/streetview?size=600x200'\n      + '&location=' + this.props.address.coords.lat.toString()+ ',' + this.props.address.coords.lng.toString()\n      + '&heading=151.78&pitch=-0.76&key=' + GOOGLE_KEY)\n\n      const streetViewPanoramaOptions = {\n        position: this.props.address.coords,\n        pov: {heading: 0, pitch: 0},\n        zoom: 1\n      };\n\n      var map = \n      <div>\n      <div className=\"results-container\">\n        <DemographicsPanel \n          business_type={this.props.business_type} \n          street = {this.props.address.street}\n          city = {this.props.address.city}\n          state = {this.props.address.state}\n          zip = {this.props.address.zip}\n          lat = {this.props.address.coords.lat}\n          lng = {this.props.address.coords.lng}\n          orientation = {\"demographics-list-vertical \"}>\n        </DemographicsPanel>\n       \n       <SimpleMap height={'75vh'} address={this.props.address} center={this.props.address.coords} zoom={15} business_type={this.props.business_type}/>\n       \n       <PlacesList></PlacesList>\n      </div>\n      <div style={{display: 'flex',  alignItems: 'center', justifyContent: 'center'}}>\n        <StaticGoogleMap size=\"600x200\"  \n          maptype='satellite' \n          zoom = '18'\n           apiKey={GOOGLE_KEY}>\n            <Marker.Group label=\"You\" color=\"brown\">\n              <Marker location={this.props.address.coords}/>\n            </Marker.Group>\n          </StaticGoogleMap>\n          <img src= {'https://maps.googleapis.com' \n            + sign('/maps/api/streetview?size=600x200'\n            + '&location=' + this.props.address.coords.lat.toString()+ ',' + this.props.address.coords.lng.toString()\n            + '&heading=0&pitch=0&sensor=false&key=' + GOOGLE_KEY)}/>\n        </div>\n    </div>\n\n      var mapTest = \n      <div>\n      <div className=\"results-container\">\n        <DemographicsPanel \n          business_type={this.props.business_type} \n          street = {this.props.address.street}\n          city = {this.props.address.city}\n          state = {this.props.address.state}\n          zip = {this.props.address.zip}\n          lat = {this.props.address.coords.lat}\n          lng = {this.props.address.coords.lng}\n          orientation = {\"demographics-list-vertical \"}>\n        </DemographicsPanel>\n        <div style={{  width: \"80%\", backgroundColor : 'black', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          <div style={{ margin: 'auto'}}>\n        <StaticGoogleMap size=\"2200x800\"  \n          maptype='satellite' \n          zoom = '18'\n           apiKey={GOOGLE_KEY}>\n            <Marker.Group label=\"You\" color=\"brown\">\n              <Marker location={this.props.address.coords}/>\n            </Marker.Group>\n          </StaticGoogleMap>\n          </div>\n          </div>\n       <PlacesList></PlacesList>\n      </div>\n      <div style={{display: 'flex',  alignItems: 'center', justifyContent: 'center'}}>\n        \n          <div style={{ width: '20%', height: '10%'}}>\n       <SimpleMap height={'25vh'} address={this.props.address} center={this.props.address.coords} zoom={15} business_type={this.props.business_type}/>\n       </div>\n          \n        </div>\n    </div>\n      var panel = \n       <div>\n        <br></br>\n          <DemographicsPanel \n            business_type={this.props.business_type} \n            street = {this.props.address.street}\n            city = {this.props.address.city}\n            state = {this.props.address.state}\n            zip = {this.props.address.zip}\n            lat = {this.props.address.coords.lat}\n            lng = {this.props.address.coords.lng}\n            orientation = {\"demographics-list-horizontal\"}>\n          </DemographicsPanel>\n        </div>\n    }\n    return (\n      <div>\n        <NavigationBar/>\n        {map}\n        <div className=\"App\">\n        <header className=\"App-header\">\n          <LookUpForm/>\n        </header>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createSelector(\n  selectors.userSelector,\n  selectors.addressSelector,\n  selectors.businessTypeSelector,\n  selectors.readySelector,\n  (user, address, business_type, ready) => ({\n      user,\n      address,\n      business_type,\n      ready\n  })\n);\n\n\n\nexport default connect(mapStateToProps) (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './Redux/serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './Redux/store'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nconst rootElement = document.getElementById('root')\nconsole.log('env', process.env.PUBLIC_URL)\nReactDOM.render(\n    <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>< App /></Router>\n    </Provider>,\n     rootElement\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"," //export const API =  'https://landmark-backend.appspot.com/api/'\n export const API = 'http://localhost:8080/';\n\n export const GOOGLE_KEY = 'AIzaSyDc1QhQx9sfS2E-ZdM0cDQuVtM_NlQhdSU'; \n export const google = window.google;\n export const GOOGLE_SECRET = 'lpkXmFKRjuqOM9YXgLIrGRlPWIA=';\n\n export const mapOptions =  {\n    streetViewControl: true,\n    scaleControl: true,\n    fullscreenControl: false,\n    styles: [{\n        featureType: \"poi.business\",\n        elementType: \"labels\",\n        stylers: [{\n            visibility: \"off\"\n        }]\n    }],\n    gestureHandling: \"greedy\",\n    disableDoubleClickZoom: true,\n    minZoom: 5,\n    maxZoom: 100,\n\n    mapTypeControl: true,\n    mapTypeId: google.maps.MapTypeId.ROADMAP,\n    mapTypeControlOptions: {\n        style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n        position: google.maps.ControlPosition.BOTTOM_CENTER,\n        mapTypeIds: [\n          google.maps.MapTypeId.ROADMAP,\n          google.maps.MapTypeId.SATELLITE,\n          google.maps.MapTypeId.HYBRID\n        ]\n    },\n    zoomControl: true,\n    clickableIcons: false\n};"],"sourceRoot":""}